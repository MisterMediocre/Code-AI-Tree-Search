{
  "prompt": "\nQUESTION:\nTwo bored soldiers are playing card war. Their card deck consists of exactly n cards, numbered from 1 to n, all values are different. They divide cards between them in some manner, it's possible that they have different number of cards. Then they play a \"war\"-like card game. \n\nThe rules are following. On each turn a fight happens. Each of them picks card from the top of his stack and puts on the table. The one whose card value is bigger wins this fight and takes both cards from the table to the bottom of his stack. More precisely, he first takes his opponent's card and puts to the bottom of his stack, and then he puts his card to the bottom of his stack. If after some turn one of the player's stack becomes empty, he loses and the other one wins. \n\nYou have to calculate how many fights will happen and who will win the game, or state that game won't end.\n\n\n-----Input-----\n\nFirst line contains a single integer n (2 \u2264 n \u2264 10), the number of cards.\n\nSecond line contains integer k_1 (1 \u2264 k_1 \u2264 n - 1), the number of the first soldier's cards. Then follow k_1 integers that are the values on the first soldier's cards, from top to bottom of his stack.\n\nThird line contains integer k_2 (k_1 + k_2 = n), the number of the second soldier's cards. Then follow k_2 integers that are the values on the second soldier's cards, from top to bottom of his stack.\n\nAll card values are different.\n\n\n-----Output-----\n\nIf somebody wins in this game, print 2 integers where the first one stands for the number of fights before end of game and the second one is 1 or 2 showing which player has won.\n\nIf the game won't end and will continue forever output  - 1.\n\n\n-----Examples-----\nInput\n4\n2 1 3\n2 4 2\n\nOutput\n6 2\nInput\n3\n1 2\n2 1 3\n\nOutput\n-1\n\n\n-----Note-----\n\nFirst sample:  [Image] \n\nSecond sample:  [Image]\n\nInstructions:\n\n\nYou are a Python3 code generator.  Output **only** valid Python code. No explanations, no commentary, no filenames, no Markdown formatting. You will spit out a code block that can be pasted into any script. It must read the input, execute the logic and then print the output. Ensure that you invoke the main() or solve() function at the end if you're writing your code inside them.\nANSWER:\n",
  "codes": [
    "def solve():\n    n = int(input())\n    k1 = int(input())\n    cards1 = list(map(int, input().split()))\n    k2 = n - k1\n    cards2 = list(map(int, input().split()))\n    \n    fights = 0\n    while cards1 and cards2:\n        if cards1[-1] > cards2[-1]:\n            cards1.append(cards2.pop())\n            fights += 1\n        else:\n            cards2.append(cards1.pop())\n            fights += 1\n    \n    if not cards1:\n        print(fights, 2)\n    elif not cards2:\n        print(fights, 1)\n    else:\n        print(-1)\n\nif True:\n    solve()"
  ],
  "rewards": [
    0.0
  ],
  "train rewards": [
    0.0
  ],
  "time": 5.079284191131592,
  "sample times": 5
}