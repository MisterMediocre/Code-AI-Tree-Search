{
  "prompt": "\nQUESTION:\nCarl is a beginner magician. He has a blue, b violet and c orange magic spheres. In one move he can transform two spheres of the same color into one sphere of any other color. To make a spell that has never been seen before, he needs at least x blue, y violet and z orange spheres. Can he get them (possible, in multiple actions)?\n\n\n-----Input-----\n\nThe first line of the input contains three integers a, b and c (0 \u2264 a, b, c \u2264 1 000 000)\u00a0\u2014 the number of blue, violet and orange spheres that are in the magician's disposal.\n\nThe second line of the input contains three integers, x, y and z (0 \u2264 x, y, z \u2264 1 000 000)\u00a0\u2014 the number of blue, violet and orange spheres that he needs to get.\n\n\n-----Output-----\n\nIf the wizard is able to obtain the required numbers of spheres, print \"Yes\". Otherwise, print \"No\".\n\n\n-----Examples-----\nInput\n4 4 0\n2 1 2\n\nOutput\nYes\n\nInput\n5 6 1\n2 7 2\n\nOutput\nNo\n\nInput\n3 3 3\n2 2 2\n\nOutput\nYes\n\n\n\n-----Note-----\n\nIn the first sample the wizard has 4 blue and 4 violet spheres. In his first action he can turn two blue spheres into one violet one. After that he will have 2 blue and 5 violet spheres. Then he turns 4 violet spheres into 2 orange spheres and he ends up with 2 blue, 1 violet and 2 orange spheres, which is exactly what he needs.\n\nTUTORIAL:\nLet\u2019s count how many spheres of each type are lacking to the goal. We must do at least that many transformations. Let\u2019s count how many spheres of each type are extra relative to the goal. Each two extra spheres give us an opportunity to do one transformation. So to find out how many transformations can be done from the given type of spheres, one must look how many extra spheres there are, divide this number by 2 and round down. Let\u2019s sum all the opportunities of transformations from each type of spheres and all the lacks. If there are at least that many opportunities of transformations as the lacks, the answer is positive. Otherwise, it\u2019s negative.\n\n\nInstructions:\n\n\nYou are a Python3 code generator.  Output **only** valid Python code. No explanations, no commentary, no filenames, no Markdown formatting. You will spit out a code block that can be pasted into any script. It must read the input, execute the logic and then print the output. Ensure that you invoke the main() or solve() function at the end if you're writing your code inside them.\nANSWER:\n",
  "codes": [
    "def solve():\n    a, b, c = map(int, input().split())\n    x, y, z = map(int, input().split())\n    \n    lacks = a + b + c - x - y - z\n    opportunities = (x + y + z) // 2\n    \n    if opportunities >= lacks:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif True:\n    solve()"
  ],
  "rewards": [
    0.275
  ],
  "train rewards": [
    0.46153846153846156
  ],
  "time": 3.018162965774536,
  "sample times": 5
}