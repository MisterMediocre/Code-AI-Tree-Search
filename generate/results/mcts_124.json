{
  "prompt": "\nQUESTION:\nThe Duck song\n\nFor simplicity, we'll assume that there are only three types of grapes: green grapes, purple grapes and black grapes.\n\nAndrew, Dmitry and Michal are all grapes' lovers, however their preferences of grapes are different. To make all of them happy, the following should happen: Andrew, Dmitry and Michal should eat at least $x$, $y$ and $z$ grapes, respectively. Andrew has an extreme affinity for green grapes, thus he will eat green grapes and green grapes only. On the other hand, Dmitry is not a fan of black grapes\u00a0\u2014 any types of grapes except black would do for him. In other words, Dmitry can eat green and purple grapes. Michal has a common taste\u00a0\u2014 he enjoys grapes in general and will be pleased with any types of grapes, as long as the quantity is sufficient.\n\nKnowing that his friends are so fond of grapes, Aki decided to host a grape party with them. He has prepared a box with $a$ green grapes, $b$ purple grapes and $c$ black grapes.\n\nHowever, Aki isn't sure if the box he prepared contains enough grapes to make everyone happy. Can you please find out whether it's possible to distribute grapes so that everyone is happy or Aki has to buy some more grapes?\n\nIt is not required to distribute all the grapes, so it's possible that some of them will remain unused.\n\n\n-----Input-----\n\nThe first line contains three integers $x$, $y$ and $z$ ($1 \\le x, y, z \\le 10^5$)\u00a0\u2014 the number of grapes Andrew, Dmitry and Michal want to eat.\n\nThe second line contains three integers $a$, $b$, $c$ ($1 \\le a, b, c \\le 10^5$)\u00a0\u2014 the number of green, purple and black grapes in the box.\n\n\n-----Output-----\n\nIf there is a grape distribution that allows everyone to be happy, print \"YES\", otherwise print \"NO\".\n\n\n-----Examples-----\nInput\n1 6 2\n4 3 3\n\nOutput\nYES\n\nInput\n5 1 1\n4 3 2\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first example, there is only one possible distribution:\n\nAndrew should take $1$ green grape, Dmitry should take $3$ remaining green grapes and $3$ purple grapes, and Michal will take $2$ out of $3$ available black grapes.\n\nIn the second test, there is no possible distribution, since Andrew is not be able to eat enough green grapes. :(\n\nInstructions:\n\n\nYou are a Python3 code generator.  Output **only** valid Python code. No explanations, no commentary, no filenames, no Markdown formatting. You will spit out a code block that can be pasted into any script. It must read the input, execute the logic and then print the output. Ensure that you invoke the main() or solve() function at the end if you're writing your code inside them.\nANSWER:\n",
  "codes": [
    "def solve():\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n\n    # Check if Andrew can eat at least x green grapes\n    if a < x:\n        return \"NO\"\n\n    # Check if Dmitry can eat at least y purple grapes\n    if b < y:\n        return \"NO\"\n\n    # Check if Michal can eat at least z black grapes\n    if c < z:\n        return \"NO\"\n\n    return \"YES\"\n\nif True:\n    solve()",
    "def main():\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n\n    # Check if the total number of grapes is enough to satisfy everyone's needs\n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n\n    # Distribute the grapes according to the preferences of each person\n    if a >= x and b >= y and c >= z:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def solve(x, y, z, a, b, c):\n    if a < x or b < y or c < z:\n        return \"NO\"\n    \n    # Andrew eats x green grapes\n    # Dmitry eats y green grapes and z purple grapes\n    # Michal eats z black grapes\n    \n    # Check if the total number of grapes is enough\n    total_grapes = a + b + c\n    if total_grapes < x + y + z:\n        return \"NO\"\n    \n    return \"YES\"\n\n# Read input\nx, y, z = map(int, input().split())\na, b, c = map(int, input().split())\n\n# Solve the problem\nprint(solve(x, y, z, a, b, c))",
    "def solve(x, y, z, a, b, c):\n    # Check if the total number of grapes is less than the sum of the desired quantities\n    if a + b + c < x + y + z:\n        return \"NO\"\n    \n    # Calculate the minimum number of each type of grape needed\n    min_green = max(0, x - a)\n    min_purple = max(0, y - b)\n    min_black = max(0, z - c)\n    \n    # Check if the distribution is possible\n    if min_green <= a and min_purple <= b and min_black <= c:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n# Read input\nx, y, z = map(int, input().split())\na, b, c = map(int, input().split())\n\n# Solve the problem\nprint(solve(x, y, z, a, b, c))",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    x, y, z = data[:3]\n    a, b, c = data[3:]\n    \n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n    \n    if a >= x and b >= y and c >= z:\n        print(\"YES\")\n        return\n    \n    if a >= x and b >= y:\n        print(\"YES\")\n        return\n    \n    if a >= x and c >= z:\n        print(\"YES\")\n        return\n    \n    if b >= y and c >= z:\n        print(\"YES\")\n        return\n    \n    if a >= x:\n        print(\"YES\")\n        return\n    \n    if b >= y:\n        print(\"YES\")\n        return\n    \n    if c >= z:\n        print(\"YES\")\n        return\n    \n    print(\"NO\")\n\nif True:\n    main()",
    "def solve(x, y, z, a, b, c):\n    if x > a or y > b or z > c:\n        return \"NO\"\n    \n    if x <= a and y <= b and z <= c:\n        return \"YES\"\n    \n    if x <= a and y <= b:\n        return \"YES\"\n    \n    if x <= a and z <= c:\n        return \"YES\"\n    \n    if y <= b and z <= c:\n        return \"YES\"\n    \n    if x <= a:\n        return \"YES\"\n    \n    if y <= b:\n        return \"YES\"\n    \n    if z <= c:\n        return \"YES\"\n    \n    return \"NO\"\n\nif True:\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n    print(solve(x, y, z, a, b, c))",
    "import sys\n\ndef solve():\n    x, y, z = map(int, sys.stdin.readline().split())\n    a, b, c = map(int, sys.stdin.readline().split())\n\n    # Check if Andrew can eat at least x green grapes\n    if a < x:\n        return \"NO\"\n\n    # Check if Dmitry can eat at least y purple grapes\n    if b < y:\n        return \"NO\"\n\n    # Check if Michal can eat at least z black grapes\n    if c < z:\n        return \"NO\"\n\n    return \"YES\"\n\nif True:\n    solve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    x, y, z = data[:3]\n    a, b, c = data[3:]\n    \n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n    \n    if a >= x and b >= y and c >= z:\n        print(\"YES\")\n        return\n    \n    if a >= x and b >= y:\n        print(\"YES\")\n        return\n    \n    if a >= x and c >= z:\n        print(\"YES\")\n        return\n    \n    if b >= y and c >= z:\n        print(\"YES\")\n        return\n    \n    if a >= x:\n        print(\"YES\")\n        return\n    \n    if b >= y:\n        print(\"YES\")\n        return\n    \n    if c >= z:\n        print(\"YES\")\n        return\n    \n    print(\"NO\")\n\nif True:\n    solve()",
    "def main():\n    # Read input\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n\n    # Check if there is enough grapes for everyone\n    if a < x or b < y or c < z:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif True:\n    main()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    x, y, z = map(int, data[:3])\n    a, b, c = map(int, data[3:])\n    \n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n    \n    print(\"YES\")\n\nif True:\n    solve()",
    "def solve():\n    import sys\n    data = sys.stdin.read().split()\n    x, y, z = map(int, data[0].split())\n    a, b, c = map(int, data[1].split())\n\n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n\n    if a >= x and b >= y and c >= z:\n        print(\"YES\")\n        return\n\n    if a >= x and b >= y:\n        print(\"YES\")\n        return\n\n    if a >= x and c >= z:\n        print(\"YES\")\n        return\n\n    if b >= y and c >= z:\n        print(\"YES\")\n        return\n\n    if a >= x:\n        print(\"YES\")\n        return\n\n    if b >= y:\n        print(\"YES\")\n        return\n\n    if c >= z:\n        print(\"YES\")\n        return\n\n    print(\"NO\")\n\nif True:\n    solve()",
    "def check_grapes(x, y, z, a, b, c):\n    # Check if Andrew can eat at least x green grapes\n    if a < x:\n        return False\n    \n    # Check if Dmitry can eat at least y purple grapes\n    if b < y:\n        return False\n    \n    # Check if Michal can eat at least z black grapes\n    if c < z:\n        return False\n    \n    return True\n\ndef main():\n    # Read input\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n    \n    # Check if it's possible to distribute grapes\n    if check_grapes(x, y, z, a, b, c):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def check_grape_distribution(x, y, z, a, b, c):\n    # Check if Andrew can eat at least x green grapes\n    if a < x:\n        return False\n    \n    # Check if Dmitry can eat at least y purple grapes\n    if b < y:\n        return False\n    \n    # Check if Michal can eat at least z black grapes\n    if c < z:\n        return False\n    \n    return True\n\ndef main():\n    # Read input\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n    \n    # Check if the distribution is possible\n    if check_grape_distribution(x, y, z, a, b, c):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    \n    def read_ints():\n        return list(map(int, input().split()))\n    \n    x, y, z = read_ints()\n    a, b, c = read_ints()\n    \n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n    \n    print(\"YES\")\n\nif True:\n    solve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    \n    x, y, z = data[:3]\n    a, b, c = data[3:]\n    \n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n    \n    print(\"YES\")\n\nif True:\n    solve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    x, y, z = data[0], data[1], data[2]\n    a, b, c = data[3], data[4], data[5]\n\n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n\n    if a >= x and b >= y and c >= z:\n        print(\"YES\")\n        return\n\n    if a >= x and b >= y:\n        print(\"YES\")\n        return\n\n    if a >= x and c >= z:\n        print(\"YES\")\n        return\n\n    if b >= y and c >= z:\n        print(\"YES\")\n        return\n\n    if a >= x:\n        print(\"YES\")\n        return\n\n    if b >= y:\n        print(\"YES\")\n        return\n\n    if c >= z:\n        print(\"YES\")\n        return\n\n    print(\"NO\")\n\nif True:\n    solve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    x, y, z = map(int, data[:3])\n    a, b, c = map(int, data[3:])\n    \n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n    \n    print(\"YES\")\n\nif True:\n    solve()",
    "def solve():\n    import sys\n\n    def read_input():\n        return map(int, sys.stdin.read().split())\n\n    x, y, z = read_input()\n    a, b, c = read_input()\n\n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n\n    print(\"YES\")\n\nif True:\n    solve()",
    "def solve(x, y, z, a, b, c):\n    if (a >= x and b >= y and c >= z):\n        return \"YES\"\n    else:\n        return \"NO\"\n\nif True:\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n    print(solve(x, y, z, a, b, c))",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int,input().split()))\n    x,y,z = data[:3]\n    a,b,c = data[3:]\n    \n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n    \n    if a >= x and b >= y and c >= z:\n        print(\"YES\")\n        return\n    \n    if a >= x and b >= y:\n        print(\"YES\")\n        return\n    \n    if a >= x and c >= z:\n        print(\"YES\")\n        return\n    \n    if b >= y and c >= z:\n        print(\"YES\")\n        return\n    \n    if a >= x:\n        print(\"YES\")\n        return\n    \n    if b >= y:\n        print(\"YES\")\n        return\n    \n    if c >= z:\n        print(\"YES\")\n        return\n    \n    print(\"NO\")\n\nif True:\n    solve()",
    "def solve(x, y, z, a, b, c):\n    # Check if Andrew can eat at least x green grapes\n    if a < x:\n        return \"NO\"\n    \n    # Check if Dmitry can eat at least y purple grapes\n    if b < y:\n        return \"NO\"\n    \n    # Check if Michal can eat at least z black grapes\n    if c < z:\n        return \"NO\"\n    \n    # If all conditions are met, return \"YES\"\n    return \"YES\"\n\n# Read input\nx, y, z = map(int, input().split())\na, b, c = map(int, input().split())\n\n# Solve the problem\nprint(solve(x, y, z, a, b, c))",
    "def solve(x, y, z, a, b, c):\n    # Check if there are enough grapes for each person\n    if a < x or b < y or c < z:\n        return \"NO\"\n    \n    # Distribute grapes based on preferences\n    if a >= x and b >= y and c >= z:\n        return \"YES\"\n    elif a >= x and b >= y:\n        return \"YES\"\n    elif a >= x and c >= z:\n        return \"YES\"\n    elif b >= y and c >= z:\n        return \"YES\"\n    elif a >= x:\n        return \"YES\"\n    elif b >= y:\n        return \"YES\"\n    elif c >= z:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n# Read input\nx, y, z = map(int, input().split())\na, b, c = map(int, input().split())\n\n# Solve the problem\nprint(solve(x, y, z, a, b, c))",
    "def main():\n    # Read input values\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n\n    # Check if there is enough grapes for each person\n    if a < x or b < y or c < z:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif True:\n    main()",
    "def solve():\n    # Read input\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n\n    # Check if there is enough grapes for each person\n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n\n    # Distribute grapes\n    if a >= x and b >= y and c >= z:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    solve()",
    "def solve():\n    # Read input values\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n\n    # Check if there is enough grapes for each person\n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n\n    # Calculate the minimum number of grapes needed for each person\n    min_grapes_needed = [x, y, z]\n\n    # Check if there is enough grapes for each person\n    if a < min_grapes_needed[0] or b < min_grapes_needed[1] or c < min_grapes_needed[2]:\n        print(\"NO\")\n        return\n\n    # Print \"YES\"\n    print(\"YES\")\n\nif True:\n    solve()",
    "def main():\n    import sys\n    data = sys.stdin.read().split()\n    x, y, z = map(int, data[0].split())\n    a, b, c = map(int, data[1].split())\n    \n    if a < x or b < y or c < z:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif True:\n    main()",
    "def solve():\n    # Read the input values\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n\n    # Check if the total number of grapes is enough to satisfy everyone's needs\n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n\n    # Determine the minimum number of each type of grape needed\n    min_green = max(0, x - a)\n    min_purple = max(0, y - b)\n    min_black = max(0, z - c)\n\n    # Print the result\n    if min_green == 0 and min_purple == 0 and min_black == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Call the solve function to run the program\nsolve()",
    "def solve(x, y, z, a, b, c):\n    green_needed = x\n    purple_needed = y\n    black_needed = z\n    \n    # Check if there are enough grapes of each type\n    if a < green_needed or b < purple_needed or c < black_needed:\n        return \"NO\"\n    \n    # Distribute grapes\n    green_given = min(a, green_needed)\n    purple_given = min(b, purple_needed)\n    black_given = min(c, black_needed)\n    \n    # Remaining grapes after distribution\n    remaining_green = a - green_given\n    remaining_purple = b - purple_given\n    remaining_black = c - black_given\n    \n    # Check if remaining grapes satisfy the conditions\n    if remaining_green >= green_needed and remaining_purple >= purple_needed and remaining_black >= black_needed:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n# Read input\nx, y, z = map(int, input().split())\na, b, c = map(int, input().split())\n\n# Solve the problem\nresult = solve(x, y, z, a, b, c)\n\n# Print the result\nprint(result)",
    "def main():\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n    \n    # Check if the total number of grapes is enough to satisfy everyone's needs\n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n    \n    # Distribute the grapes based on the preferences of each person\n    if a >= x and b >= y and c >= z:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def solve(x, y, z, a, b, c):\n    if a < x:\n        return \"NO\"\n    if b < y:\n        return \"NO\"\n    if c < z:\n        return \"NO\"\n    return \"YES\"\n\nif True:\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n    print(solve(x, y, z, a, b, c))",
    "def solve():\n    # Read the input\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n\n    # Check if the box contains enough grapes\n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n\n    # Distribute the grapes\n    if a >= x and b >= y and c >= z:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    solve()",
    "def main():\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n\n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n\n    if a >= x and b >= y and c >= z:\n        print(\"YES\")\n        return\n\n    if a >= x and b >= y:\n        print(\"YES\")\n        return\n\n    if a >= x and c >= z:\n        print(\"YES\")\n        return\n\n    if b >= y and c >= z:\n        print(\"YES\")\n        return\n\n    if a >= x:\n        print(\"YES\")\n        return\n\n    if b >= y:\n        print(\"YES\")\n        return\n\n    if c >= z:\n        print(\"YES\")\n        return\n\n    print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n    \n    if a < x or b < y or c < z:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif True:\n    main()",
    "def solve(x, y, z, a, b, c):\n    if (a < x) or (b < y) or (c < z):\n        return \"NO\"\n    else:\n        return \"YES\"\n\nif True:\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n    print(solve(x, y, z, a, b, c))",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    \n    x, y, z = data[0], data[1], data[2]\n    a, b, c = data[3], data[4], data[5]\n\n    # Check if Andrew can eat at least x green grapes\n    if a < x:\n        return \"NO\"\n    \n    # Check if Dmitry can eat at least y purple grapes\n    if b < y:\n        return \"NO\"\n    \n    # Check if Michal can eat at least z black grapes\n    if c < z:\n        return \"NO\"\n\n    return \"YES\"\n\nif True:\n    solve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    x, y, z = map(int, data)\n    a, b, c = map(int, data[2:])\n    \n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n    \n    print(\"YES\")\n\nif True:\n    solve()",
    "def solve():\n    import sys\n    \n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    \n    x, y, z = data[:3]\n    a, b, c = data[3:]\n    \n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n    \n    print(\"YES\")\n\nif True:\n    solve()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    x, y, z = map(int, data[:3])\n    a, b, c = map(int, data[3:])\n    \n    if a < x or b < y or c < z:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif True:\n    main()",
    "def solve():\n    import sys\n    \n    # Read input\n    x, y, z = map(int, sys.stdin.readline().split())\n    a, b, c = map(int, sys.stdin.readline().split())\n    \n    # Check if there is enough grapes for everyone\n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n    \n    # Distribute grapes\n    if a >= x and b >= y and c >= z:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    solve()",
    "def solve():\n    import sys\n    \n    def read_input():\n        return map(int, sys.stdin.read().split())\n    \n    def check_distribution(x, y, z, a, b, c):\n        # Andrew eats x green grapes\n        if a < x:\n            return False\n        \n        # Dmitry eats y green grapes (and possibly purple)\n        if a - x < y:\n            return False\n        \n        # Michal eats z black grapes\n        if c < z:\n            return False\n        \n        return True\n    \n    x, y, z = read_input()\n    a, b, c = read_input()\n    \n    if check_distribution(x, y, z, a, b, c):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    solve()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    \n    def parse_input(input):\n        lines = input().split('\\n')\n        x, y, z = map(int, lines[0].split())\n        a, b, c = map(int, lines[1].split())\n        return x, y, z, a, b, c\n    \n    x, y, z, a, b, c = parse_input(input())\n    \n    if a < x or b < y or c < z:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif True:\n    main()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    x, y, z = data[:3]\n    a, b, c = data[3:]\n    \n    # Check if the total number of grapes is enough\n    if a + b + c < x + y + z:\n        print(\"NO\")\n        return\n    \n    # Distribute grapes based on preferences\n    if x > a:\n        x -= a\n        a = 0\n    else:\n        a -= x\n        x = 0\n    \n    if y > b:\n        y -= b\n        b = 0\n    else:\n        b -= y\n        y = 0\n    \n    if z > c:\n        z -= c\n        c = 0\n    else:\n        c -= z\n        z = 0\n    \n    # Check if all preferences are satisfied\n    if x == 0 and y == 0 and z == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    solve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    x, y, z = map(int, data[0].split())\n    a, b, c = map(int, data[1].split())\n\n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n\n    if a >= x and b >= y and c >= z:\n        print(\"YES\")\n        return\n\n    if a >= x and b >= y:\n        print(\"YES\")\n        return\n\n    if a >= x and c >= z:\n        print(\"YES\")\n        return\n\n    if b >= y and c >= z:\n        print(\"YES\")\n        return\n\n    if a >= x:\n        print(\"YES\")\n        return\n\n    if b >= y:\n        print(\"YES\")\n        return\n\n    if c >= z:\n        print(\"YES\")\n        return\n\n    print(\"NO\")\n\nif True:\n    solve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    x, y, z = data[:3]\n    a, b, c = data[3:]\n\n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n\n    if a >= x and b >= y and c >= z:\n        print(\"YES\")\n        return\n\n    if a >= x and b >= y:\n        print(\"YES\")\n        return\n\n    if a >= x and c >= z:\n        print(\"YES\")\n        return\n\n    if b >= y and c >= z:\n        print(\"YES\")\n        return\n\n    if a >= x:\n        print(\"YES\")\n        return\n\n    if b >= y:\n        print(\"YES\")\n        return\n\n    if c >= z:\n        print(\"YES\")\n        return\n\n    print(\"NO\")\n\nif True:\n    solve()",
    "def main():\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n\n    if x > a or y > b or z > c:\n        print(\"NO\")\n        return\n\n    if x == a and y == b and z == c:\n        print(\"YES\")\n        return\n\n    if x < a:\n        x += a - x\n    if y < b:\n        y += b - y\n    if z < c:\n        z += c - z\n\n    if x >= a and y >= b and z >= c:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def solve():\n    import sys\n    from collections import defaultdict\n    \n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    \n    x, y, z = data[:3]\n    a, b, c = data[3:]\n    \n    # Create a dictionary to store the number of grapes each person wants\n    preferences = {\n        'andrew': {'green': x},\n        'dmitry': {'purple': y, 'black': 0},\n        'michal': {'green': 0, 'purple': 0, 'black': z}\n    }\n    \n    # Calculate the total number of grapes needed\n    total_grapes_needed = sum(preferences[p]['green'] + preferences[p]['purple'] + preferences[p]['black'] for p in preferences)\n    \n    # Check if the box contains enough grapes\n    if a < total_grapes_needed or b < total_grapes_needed or c < total_grapes_needed:\n        print(\"NO\")\n        return\n    \n    # Distribute the grapes\n    for p in preferences:\n        if preferences[p]['green'] > 0:\n            preferences[p]['green'] -= 1\n            a -= 1\n        elif preferences[p]['purple'] > 0:\n            preferences[p]['purple'] -= 1\n            b -= 1\n        else:\n            preferences[p]['black'] -= 1\n            c -= 1\n    \n    # Print the result\n    print(\"YES\")\n\nif True:\n    solve()",
    "def solve(x, y, z, a, b, c):\n    # Check if Andrew can eat enough green grapes\n    if a < x:\n        return \"NO\"\n    \n    # Check if Dmitry can eat enough purple grapes\n    if b < y:\n        return \"NO\"\n    \n    # Check if Michal can eat enough black grapes\n    if c < z:\n        return \"NO\"\n    \n    return \"YES\"\n\n# Read input\nx, y, z = map(int, input().split())\na, b, c = map(int, input().split())\n\n# Solve the problem\nprint(solve(x, y, z, a, b, c))",
    "def solve():\n    # Read inputs\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n\n    # Check if there is enough grapes for each person\n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n\n    # Distribute grapes\n    if a >= x and b >= y and c >= z:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    solve()",
    "def solve(x, y, z, a, b, c):\n    # Check if the box contains enough grapes for each person\n    if a < x or b < y or c < z:\n        return \"NO\"\n    \n    # Calculate the minimum number of grapes needed for each person\n    min_grapes = x + y + z\n    \n    # Check if the box contains enough grapes for all three people\n    if a >= min_grapes and b >= min_grapes and c >= min_grapes:\n        return \"YES\"\n    \n    # If not, check if there are enough grapes left over\n    if a > min_grapes:\n        return \"YES\"\n    elif b > min_grapes:\n        return \"YES\"\n    elif c > min_grapes:\n        return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nx, y, z = map(int, input().split())\na, b, c = map(int, input().split())\n\n# Solve the problem\nprint(solve(x, y, z, a, b, c))",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n\n    x, y, z = data[:3]\n    a, b, c = data[3:]\n\n    if a < x or b < y or c < z:\n        print(\"NO\")\n        return\n\n    print(\"YES\")\n\nif True:\n    solve()",
    "def main():\n    x, y, z = map(int, input().split())\n    a, b, c = map(int, input().split())\n\n    # Check if Andrew can eat at least x green grapes\n    if a < x:\n        return \"NO\"\n\n    # Check if Dmitry can eat at least y purple grapes\n    if b < y:\n        return \"NO\"\n\n    # Check if Michal can eat at least z black grapes\n    if c < z:\n        return \"NO\"\n\n    # If all conditions are met, print \"YES\"\n    print(\"YES\")\n\nif True:\n    main()"
  ],
  "rewards": [
    0.0,
    0.8085106382978723,
    0.8085106382978723,
    0.5531914893617021,
    0.8085106382978723,
    0.8085106382978723,
    0.0,
    0.8085106382978723,
    0.8085106382978723,
    0.8085106382978723,
    0.0,
    0.8085106382978723,
    0.8085106382978723,
    0.0,
    0.8085106382978723,
    0.8085106382978723,
    0.8085106382978723,
    0.0,
    0.8085106382978723,
    0.8085106382978723,
    0.8085106382978723,
    0.8085106382978723,
    0.8085106382978723,
    0.8085106382978723,
    0.8085106382978723,
    0.0,
    0.8085106382978723,
    0.6170212765957447,
    0.8085106382978723,
    0.8085106382978723,
    0.8085106382978723,
    0.8085106382978723,
    0.8085106382978723,
    0.8085106382978723,
    0.0,
    0.0,
    0.8085106382978723,
    0.8085106382978723,
    0.8085106382978723,
    0.0,
    0.0,
    0.8085106382978723,
    0.0,
    0.8085106382978723,
    0.8085106382978723,
    0.0,
    0.8085106382978723,
    0.8085106382978723,
    0.6382978723404256,
    0.8085106382978723,
    0.2127659574468085
  ],
  "train rewards": [
    0.0,
    0.7446808510638298,
    0.7446808510638298,
    0.6808510638297872,
    0.7446808510638298,
    0.7446808510638298,
    0.0,
    0.7446808510638298,
    0.7446808510638298,
    0.7446808510638298,
    0.0,
    0.7446808510638298,
    0.7446808510638298,
    0.0,
    0.7446808510638298,
    0.7446808510638298,
    0.7446808510638298,
    0.0,
    0.7446808510638298,
    0.7446808510638298,
    0.7446808510638298,
    0.7446808510638298,
    0.7446808510638298,
    0.7446808510638298,
    0.7446808510638298,
    0.0,
    0.7446808510638298,
    0.5957446808510638,
    0.7446808510638298,
    0.7446808510638298,
    0.7446808510638298,
    0.7446808510638298,
    0.7446808510638298,
    0.7446808510638298,
    0.0,
    0.0,
    0.7446808510638298,
    0.7446808510638298,
    0.7446808510638298,
    0.0,
    0.0,
    0.7446808510638298,
    0.0,
    0.7446808510638298,
    0.7446808510638298,
    0.0,
    0.7446808510638298,
    0.7446808510638298,
    0.5957446808510638,
    0.7446808510638298,
    0.14893617021276595
  ],
  "time": [
    21.12202763557434,
    24.977272748947144,
    29.821231603622437,
    35.302175998687744,
    41.33757400512695,
    46.79402041435242,
    50.81450128555298,
    56.79063296318054,
    59.5258903503418,
    61.992408752441406,
    67.9202950000763,
    73.50998997688293,
    78.99224042892456,
    81.8532726764679,
    84.23797130584717,
    90.0764729976654,
    92.76917815208435,
    95.32603430747986,
    98.00910449028015,
    103.48064112663269,
    107.82374501228333,
    113.67360639572144,
    116.38511848449707,
    119.92234945297241,
    124.92903423309326,
    127.61008167266846,
    132.8855926990509,
    139.66420650482178,
    142.7638282775879,
    145.62065029144287,
    149.0342378616333,
    153.84477639198303,
    155.39533877372742,
    158.1205050945282,
    161.97137188911438,
    163.98380780220032,
    166.69428372383118,
    169.16031670570374,
    172.80740571022034,
    177.67257499694824,
    181.4134030342102,
    187.01261448860168,
    192.4036271572113,
    197.27121424674988,
    201.04039597511292,
    210.11405777931213,
    213.87979865074158,
    217.34098434448242,
    223.42664670944214,
    225.58804893493652,
    228.745525598526
  ],
  "sample times": 51
}