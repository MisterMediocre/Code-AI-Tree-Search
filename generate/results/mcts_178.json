{
  "prompt": "\nQUESTION:\nA telephone number is a sequence of exactly $11$ digits such that its first digit is 8.\n\nVasya and Petya are playing a game. Initially they have a string $s$ of length $n$ ($n$ is odd) consisting of digits. Vasya makes the first move, then players alternate turns. In one move the player must choose a character and erase it from the current string. For example, if the current string 1121, after the player's move it may be 112, 111 or 121. The game ends when the length of string $s$ becomes 11. If the resulting string is a telephone number, Vasya wins, otherwise Petya wins.\n\nYou have to determine if Vasya has a winning strategy (that is, if Vasya can win the game no matter which characters Petya chooses during his moves).\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($13 \\le n < 10^5$, $n$ is odd) \u2014 the length of string $s$.\n\nThe second line contains the string $s$ ($|s| = n$) consisting only of decimal digits.\n\n\n-----Output-----\n\nIf Vasya has a strategy that guarantees him victory, print YES.\n\nOtherwise print NO.\n\n\n-----Examples-----\nInput\n13\n8380011223344\n\nOutput\nYES\n\nInput\n15\n807345619350641\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first example Vasya needs to erase the second character. Then Petya cannot erase a character from the remaining string 880011223344 so that it does not become a telephone number.\n\nIn the second example after Vasya's turn Petya can erase one character character 8. The resulting string can't be a telephone number, because there is no digit 8 at all.\n\nInstructions:\n\n\nYou are a Python3 code generator.  Output **only** valid Python code. No explanations, no commentary, no filenames, no Markdown formatting. You will spit out a code block that can be pasted into any script. It must read the input, execute the logic and then print the output. Ensure that you invoke the main() or solve() function at the end if you're writing your code inside them.\nANSWER:\n",
  "codes": [
    "def solve(n, s):\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Count the occurrences of each digit\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if the count of each digit is even except for 8\n    if digit_count[8] % 2 == 1:\n        return \"NO\"\n    \n    # Check if the count of each digit is even except for 8\n    for i in range(10):\n        if i != 8 and digit_count[i] % 2 != 0:\n            return \"NO\"\n    \n    return \"YES\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\nprint(result)",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Check if the string can be transformed into a telephone number\n    for i in range(n):\n        if s[i] == '8':\n            # Remove the '8' and check if the remaining string is a telephone number\n            remaining_s = s[:i] + s[i+1:]\n            if len(remaining_s) == 11 and remaining_s.isdigit():\n                return \"YES\"\n    \n    return \"NO\"\n\nif True:\n    solve()",
    "def solve(n, s):\n    if len(s) != n:\n        return \"NO\"\n    \n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Check if the string can be transformed into a telephone number\n    for i in range(1, n):\n        if s[i] == '8':\n            continue\n        \n        # Try to transform the string by removing the current digit\n        new_s = s[:i] + s[i+1:]\n        \n        # Check if the new string can be transformed into a telephone number\n        if new_s[0] == '8' and all(digit in '0123456789' for digit in new_s[1:]):\n            return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def check_victory(s):\n    # Check if the string is already a telephone number\n    if s[0] == '8' and len(set(s)) == 1:\n        return True\n    \n    # Try to remove each character and check if the resulting string is a telephone number\n    for i in range(len(s)):\n        new_s = s[:i] + s[i+1:]\n        if new_s[0] == '8' and len(set(new_s)) == 1:\n            return True\n    \n    return False\n\n# Read input\nn = int(input())\ns = input()\n\n# Determine if Vasya has a winning strategy\nif check_victory(s):\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "def solve(n, s):\n    def is_valid(s):\n        return len(s) == 11 and s[0] == '8'\n\n    for i in range(n):\n        if is_valid(s[:i+1]):\n            return \"YES\"\n        s = s[:-1]\n    return \"NO\"\n\nif True:\n    n = int(input())\n    s = input()\n    print(solve(n, s))",
    "def solve(n, s):\n    if n != 11:\n        return \"NO\"\n    \n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Check if the string is a valid telephone number\n    for i in range(1, 11):\n        if s[i] == '8':\n            continue\n        if s[i-1] == '8' and s[i] != '0':\n            return \"NO\"\n        if s[i-1] != '8' and s[i] == '0':\n            return \"NO\"\n    \n    return \"YES\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nprint(solve(n, s))",
    "def solve(n, s):\n    # Convert the string to a list for easier manipulation\n    s_list = list(s)\n    \n    # Check if the first digit is 8\n    if s_list[0] != '8':\n        return \"NO\"\n    \n    # Count the occurrences of each digit in the string\n    digit_count = [0] * 10\n    for digit in s_list:\n        digit_count[int(digit)] += 1\n    \n    # Check if there are enough digits for a valid telephone number\n    if digit_count[8] >= 1 and digit_count[0] >= 1 and digit_count[1] >= 1 and digit_count[2] >= 1 and digit_count[3] >= 1 and digit_count[4] >= 1 and digit_count[5] >= 1 and digit_count[6] >= 1 and digit_count[7] >= 1 and digit_count[9] >= 1:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def main():\n    n = int(input())\n    s = input()\n    \n    # Check if the initial string is already a telephone number\n    if s[0] == '8' and len(s) == 11:\n        print(\"YES\")\n        return\n    \n    # Check if the string can be transformed into a telephone number by erasing characters\n    for i in range(n):\n        new_s = s[:i] + s[i+1:]\n        if new_s[0] == '8' and len(new_s) == 11:\n            print(\"YES\")\n            return\n    \n    print(\"NO\")\n\nif True:\n    main()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    # Check if the initial string is already a telephone number\n    if s[:1] == '8':\n        print(\"YES\")\n        return\n    \n    # Check if the string can be transformed into a telephone number by erasing characters\n    for i in range(n):\n        if s[i] != '8':\n            new_s = s[:i] + s[i+1:]\n            if len(new_s) == 11 and new_s[:1] == '8':\n                print(\"YES\")\n                return\n    \n    print(\"NO\")\n\nif True:\n    solve()",
    "import sys\n\ndef solve():\n    n = int(input())\n    s = input()\n    \n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Check if the string can be transformed into a telephone number\n    for i in range(n):\n        if s[i] == '8':\n            # Remove the '8' and check if the remaining string is a telephone number\n            remaining_s = s[:i] + s[i+1:]\n            if len(remaining_s) == 11:\n                for j in range(11):\n                    if remaining_s[j] != str(j):\n                        break\n                else:\n                    return \"YES\"\n    \n    return \"NO\"\n\nif True:\n    solve()",
    "def check_vasya_win(s):\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return False\n    \n    # Count the occurrences of each digit\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if the count of each digit is even except for 8\n    for i in range(10):\n        if i == 8:\n            continue\n        if digit_count[i] % 2 != 0:\n            return False\n    \n    return True\n\n# Read input\nn = int(input())\ns = input()\n\n# Determine if Vasya has a winning strategy\nif check_vasya_win(s):\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "```python\ndef solve(s):\n    n = len(s)\n    if n != 11:\n        return \"NO\"\n    \n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Check if the string is a telephone number\n    for i in range(1, 11):\n        if s[i] == '8':\n            continue\n        if s[i-1] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8'",
    "def solve(n, s):\n    if n == 11:\n        return \"YES\" if s[0] == '8' else \"NO\"\n    \n    for i in range(1, n):\n        if s[i] == '8':\n            if solve(n - 1, s[:i] + s[i+1:]) == \"YES\":\n                return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n: int, s: str) -> bool:\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return False\n    \n    # Count the occurrences of each digit in the string\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if the count of each digit is even except for 8\n    for i in range(10):\n        if i == 8:\n            continue\n        if digit_count[i] % 2 != 0:\n            return False\n    \n    return True\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(\"YES\" if result else \"NO\")",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    n = data[0]\n    s = data[1:]\n    \n    def is_valid(s):\n        return len(s) == 11 and s[0] == '8'\n    \n    def dfs(i):\n        if i == n:\n            return is_valid(s)\n        \n        for j in range(i, n):\n            s[i:j+1] = ''\n            if dfs(j+1):\n                return True\n        \n        return False\n    \n    if dfs(0):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    solve()",
    "def solve(n, s):\n    if len(s) != n or n % 2 == 0:\n        return \"NO\"\n    \n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Check if the last digit is 8\n    if s[-1] != '8':\n        return \"NO\"\n    \n    # Check if the string is a telephone number\n    for i in range(1, n-1):\n        if s[i] != '8':\n            return \"NO\"\n    \n    return \"YES\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    # Initialize the count of '8' in the string\n    count_8 = s.count('8')\n    \n    # Check if Vasya can force a win\n    if count_8 >= 11 - n // 2:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    # Check if the initial string is already a telephone number\n    if s[0] == '8' and len(s) == 11:\n        return \"YES\"\n    \n    # Count the occurrences of each digit in the string\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if there are enough digits to form a telephone number\n    if digit_count[8] >= 1 and digit_count[0] >= 1 and digit_count[1] >= 1 and digit_count[2] >= 1 and digit_count[3] >= 1 and digit_count[4] >= 1 and digit_count[5] >= 1 and digit_count[6] >= 1 and digit_count[7] >= 1 and digit_count[9] >= 1:\n        return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "```python\ndef solve(n, s):\n    if len(s) != 11:\n        return \"NO\"\n    \n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Check if the string is a telephone number\n    for i in range(1, 11):\n        if s[i] == '8':\n            continue\n        if s[i-1] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s[i] == '8':\n            continue\n        if s[i] == '8' and s[i+1] == '8':\n            continue\n        if s[i-1] == '8' and s",
    "def solve(n):\n    s = input()\n    if len(s) != n:\n        return \"NO\"\n    \n    for i in range(1, n+1):\n        if s[i-1] == '8':\n            return \"YES\"\n    \n    return \"NO\"\n\nif True:\n    n = int(input())\n    print(solve(n))",
    "def check_victory(n, s):\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return False\n    \n    # Count the occurrences of each digit in the string\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if the count of each digit is even except for the first digit\n    if digit_count[0] % 2 == 0:\n        for i in range(1, 10):\n            if digit_count[i] % 2 != 0:\n                return True\n    else:\n        for i in range(1, 10):\n            if digit_count[i] % 2 == 0:\n                return False\n    \n    return False\n\n# Read input\nn = int(input())\ns = input()\n\n# Determine if Vasya has a winning strategy\nif check_victory(n, s):\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "def solve(n, s):\n    if len(s) == 11 and s[0] == '8':\n        return \"YES\"\n    else:\n        return \"NO\"\n\nif True:\n    n = int(input())\n    s = input()\n    print(solve(n, s))",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    n = int(data[0])\n    s = data[1]\n    \n    # Check if the first digit is 8\n    if s[0] != '8':\n        print(\"NO\")\n        return\n    \n    # Check if the string can be transformed into a telephone number\n    for i in range(n):\n        if s[i] == '8':\n            # Remove the '8' and check if the remaining string is a telephone number\n            remaining_s = s[:i] + s[i+1:]\n            if len(remaining_s) == 11 and remaining_s.isdigit():\n                print(\"YES\")\n                return\n    \n    print(\"NO\")\n\nif True:\n    solve()",
    "def solve(n, s):\n    # Check if the string starts with '8'\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Count the occurrences of each digit in the string\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if the count of each digit is even except for '8'\n    if digit_count[8] % 2 == 1:\n        return \"NO\"\n    \n    # Check if the count of each digit is even except for '8' and '0'\n    if digit_count[0] % 2 == 1:\n        return \"NO\"\n    \n    # Check if the count of each digit is even except for '8', '0', and '1'\n    if digit_count[1] % 2 == 1:\n        return \"NO\"\n    \n    # Check if the count of each digit is even except for '8', '0', '1', and '2'\n    if digit_count[2] % 2 == 1:\n        return \"NO\"\n    \n    # Check if the count of each digit is even except for '8', '0', '1', '2', and '3'\n    if digit_count[3] % 2 == 1:\n        return \"NO\"\n    \n    # Check if the count of each digit is even except for '8', '0', '1', '2', '3', and '4'\n    if digit_count[4] % 2 == 1:\n        return \"NO\"\n    \n    # Check if the count of each digit is even except for '8', '0', '1', '2', '3', '4', and '5'\n    if digit_count[5] % 2 == 1:\n        return \"NO\"\n    \n    # Check if the count of each digit is even except for '8', '0', '1', '2', '3', '4', '5', and '6'\n    if digit_count[6] % 2 == 1:\n        return \"NO\"\n    \n    # Check if the count of each digit is even except for '8', '0', '1', '2', '3', '4', '5', '6', and '7'\n    if digit_count[7] % 2 == 1:\n        return \"NO\"\n    \n    # Check if the count of each digit is even except for '8', '0', '1', '2', '3', '4', '5', '6', '7', and '8'\n    if digit_count[8] % 2 == 1:\n        return \"NO\"\n    \n    # Check if the count of each digit is even except for '8', '0', '1', '2', '3', '4', '5', '6', '7', '8', and '9'\n    if digit_count[9] % 2 == 1:\n        return \"NO\"\n    \n    # If all checks pass, Vasya has a winning strategy\n    return \"YES\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def check_vasya_wins(n, s):\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return False\n    \n    # Count the occurrences of each digit in the string\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if the count of each digit is even except for the first digit\n    if digit_count[0] % 2 == 0:\n        for i in range(1, 10):\n            if digit_count[i] % 2 != 0:\n                return True\n    else:\n        for i in range(1, 10):\n            if digit_count[i] % 2 == 0:\n                return False\n    \n    return False\n\n# Read input\nn = int(input())\ns = input()\n\n# Determine if Vasya has a winning strategy\nif check_vasya_wins(n, s):\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "def solve(n, s):\n    # Check if the first character is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Count the occurrences of each digit in the string\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if the count of each digit is even except for 8\n    if digit_count[8] % 2 == 1:\n        return \"NO\"\n    \n    # Check if the count of each digit is even except for 8\n    for i in range(10):\n        if i != 8 and digit_count[i] % 2 != 0:\n            return \"NO\"\n    \n    return \"YES\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    if len(s) != n or s[0] != '8':\n        return \"NO\"\n    \n    # Check if the string can be transformed into a telephone number\n    for i in range(1, n):\n        if s[i] == '8' and s[i-1] != '8':\n            return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    if n == 11 and s[0] == '8':\n        return \"YES\"\n    else:\n        return \"NO\"\n\nif True:\n    n = int(input())\n    s = input()\n    print(solve(n, s))",
    "def check_vasyas_strategy(n, s):\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return False\n    \n    # Count the occurrences of each digit in the string\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if the count of each digit is even except for the first digit\n    if digit_count[0] % 2 == 0:\n        for i in range(1, 10):\n            if digit_count[i] % 2 != 0:\n                return True\n    else:\n        for i in range(1, 10):\n            if digit_count[i] % 2 == 0:\n                return False\n    \n    return False\n\n# Read input\nn = int(input())\ns = input()\n\n# Check if Vasya has a winning strategy\nif check_vasyas_strategy(n, s):\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "def solve(n, s):\n    def is_telephone_number(s):\n        return len(s) == 11 and s[0] == '8'\n\n    for i in range(n):\n        if is_telephone_number(s[:i+1]):\n            return \"YES\"\n        s = s[1:]\n    return \"NO\"\n\nif True:\n    n = int(input())\n    s = input()\n    print(solve(n, s))",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def is_valid(s):\n        return len(s) == 11 and s[0] == '8'\n    \n    def dfs(i):\n        if i == n:\n            return is_valid(s)\n        \n        for j in range(i, n):\n            new_s = s[:j] + s[j+1:]\n            if dfs(j+1):\n                return True\n        \n        return False\n    \n    if dfs(0):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    solve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    if len(s) != n:\n        return \"NO\"\n    if s[0] != '8':\n        return \"NO\"\n    for i in range(1, n):\n        if s[i] == '8':\n            return \"YES\"\n    return \"NO\"\n\nif True:\n    solve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    if len(s) != n:\n        return \"NO\"\n    \n    if s[0] != '8':\n        return \"NO\"\n    \n    for i in range(1, n):\n        if s[i] == '8':\n            return \"YES\"\n    \n    return \"NO\"\n\nif True:\n    solve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    # Check if the first digit is 8\n    if s[0] != '8':\n        print(\"NO\")\n        return\n    \n    # Check if the string can be transformed into a telephone number\n    for i in range(n):\n        if s[i] == '8':\n            # Remove the '8' and check if the remaining string is a telephone number\n            remaining_s = s[:i] + s[i+1:]\n            if len(remaining_s) == 11 and remaining_s.isdigit():\n                print(\"YES\")\n                return\n    \n    print(\"NO\")\n\nif True:\n    solve()",
    "def check_vasya_win(n, s):\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return False\n    \n    # Count the occurrences of each digit in the string\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if the count of each digit is even except for the first digit\n    if digit_count[0] % 2 == 0:\n        for i in range(1, 10):\n            if digit_count[i] % 2 != 0:\n                return True\n    else:\n        for i in range(1, 10):\n            if digit_count[i] % 2 == 0:\n                return False\n    \n    return False\n\n# Read input\nn = int(input())\ns = input()\n\n# Determine if Vasya has a winning strategy\nif check_vasya_win(n, s):\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n\n    n = int(data[0])\n    s = data[1]\n\n    # Check if the first digit is 8\n    if s[0] != '8':\n        print(\"NO\")\n        return\n\n    # Check if the string can be transformed into a telephone number\n    for i in range(n):\n        if s[i] == '8':\n            # Remove the '8' and check if the remaining string is a telephone number\n            remaining_s = s[:i] + s[i+1:]\n            if len(remaining_s) == 11:\n                count = 0\n                for j in range(11):\n                    if remaining_s[j] == '8':\n                        count += 1\n                if count % 2 == 0:\n                    print(\"YES\")\n                    return\n    print(\"NO\")\n\nif True:\n    solve()",
    "def solve(n, s):\n    def is_valid(num):\n        return num[0] == '8' and len(num) == 11\n    \n    for i in range(n):\n        if is_valid(s[:i+1]):\n            return \"YES\"\n        s = s[1:]\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    if len(s) != n:\n        return False\n    if s[0] != '8':\n        return False\n    for i in range(1, n):\n        if s[i] == '8':\n            return True\n    return False\n\nif True:\n    n = int(input())\n    s = input()\n    print(\"YES\" if solve(n, s) else \"NO\")",
    "def solve(n, s):\n    if len(s) != n:\n        return \"NO\"\n    if s[0] != '8':\n        return \"NO\"\n    for i in range(1, n):\n        if s[i] == '8':\n            return \"YES\"\n    return \"NO\"\n\nif True:\n    n = int(input())\n    s = input()\n    print(solve(n, s))",
    "def solve(n, s):\n    if len(s) != n:\n        return \"NO\"\n    \n    for i in range(1, n+1):\n        if s[i-1] == '8':\n            return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    if len(s) != n:\n        return False\n    \n    # Check if the first digit is 8\n    if s[0] != '8':\n        return False\n    \n    # Check if the string can be transformed into a telephone number\n    for i in range(1, n):\n        if s[i] == '8':\n            continue\n        \n        # Try removing the current digit and check if the remaining string can be transformed into a telephone number\n        remaining_str = s[:i] + s[i+1:]\n        if remaining_str.count('8') >= 2:\n            return True\n    \n    return False\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(\"YES\" if result else \"NO\")",
    "def solve(n, s):\n    if n == 11:\n        return 'YES' if s[0] == '8' else 'NO'\n    \n    for i in range(1, n):\n        if s[i] != '8':\n            continue\n        \n        # Check if removing this character results in a valid telephone number\n        if is_valid_telephone_number(s[:i] + s[i+1:]):\n            return 'YES'\n    \n    return 'NO'\n\ndef is_valid_telephone_number(num):\n    num_str = str(num)\n    if len(num_str) != 11:\n        return False\n    \n    if num_str[0] != '8':\n        return False\n    \n    for i in range(1, 11):\n        if i % 2 == 0:\n            if num_str[i] != '0':\n                return False\n        else:\n            if num_str[i] not in '123456789':\n                return False\n    \n    return True\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    if n != 11 or s[0] != '8':\n        return \"NO\"\n    \n    # Check if the string can be transformed into a valid telephone number\n    for i in range(1, 11):\n        if s[i-1] == '8' and s[i] != '8':\n            return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    if len(s) != n:\n        return \"NO\"\n    \n    if s[0] != '8':\n        return \"NO\"\n    \n    for i in range(1, n):\n        if s[i] == '8':\n            return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    if n == 1:\n        return \"YES\" if s[0] == '8' else \"NO\"\n    \n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Count the occurrences of each digit\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if there are enough digits for a valid telephone number\n    if digit_count[8] >= 1 and digit_count[0] >= 1 and digit_count[1] >= 1 and digit_count[2] >= 1 and digit_count[3] >= 1 and digit_count[4] >= 1 and digit_count[5] >= 1 and digit_count[6] >= 1 and digit_count[7] >= 1 and digit_count[9] >= 1:\n        return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\nprint(result)",
    "def solve(n, s):\n    if n == 11:\n        return True\n    for i in range(1, n):\n        if s[i] != '8':\n            continue\n        if s[:i] + s[i+1:] == ''.join(sorted(s[:i] + s[i+1:])):\n            return True\n    return False\n\nif True:\n    n = int(input())\n    s = input()\n    print(\"YES\" if solve(n, s) else \"NO\")",
    "def solve(n, s):\n    if len(s) != n:\n        return \"NO\"\n    for i in range(1, n+1):\n        if s[i-1] == '8':\n            return \"YES\"\n    return \"NO\"\n\nif True:\n    n = int(input())\n    s = input()\n    print(solve(n, s))",
    "def solve(n, s):\n    if len(s) != n:\n        raise ValueError(\"Invalid input: length of string should be equal to n\")\n    \n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Check if the string can be transformed into a telephone number\n    for i in range(1, n):\n        if s[i] == '8':\n            continue\n        \n        # Try removing the current digit and check if the remaining string can be transformed into a telephone number\n        remaining_string = s[:i] + s[i+1:]\n        if remaining_string.count('8') >= 2:\n            return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\nprint(result)",
    "def solve(n, s):\n    if len(s) == 11:\n        return \"YES\" if s[0] == '8' else \"NO\"\n    \n    for i in range(1, n+1):\n        if s[i-1] == '8':\n            new_s = s[:i-1] + s[i:]\n            if len(new_s) == 11 and new_s[0] == '8':\n                return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    if len(set(s)) == 1 and s[0] == '8':\n        return \"YES\"\n    else:\n        return \"NO\"\n\nif True:\n    n = int(input())\n    s = input()\n    print(solve(n, s))",
    "def solve(n, s):\n    if n == 11:\n        return \"YES\"\n    \n    for i in range(1, n):\n        if s[i] != '8':\n            continue\n        \n        # Check if removing this character results in a valid telephone number\n        left = s[:i]\n        right = s[i+1:]\n        \n        if len(left) > 0 and left[-1] != '8':\n            continue\n        \n        if len(right) > 0 and right[0] != '8':\n            continue\n        \n        return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)"
  ],
  "rewards": [
    0.675,
    0.0,
    0.675,
    0.7,
    0.775,
    0.675,
    0.65,
    0.675,
    0.7,
    0.0,
    0.7,
    0.0,
    0.0,
    0.7,
    0.0,
    0.7,
    0.55,
    0.6,
    0.0,
    0.4,
    0.725,
    0.675,
    0.675,
    0.675,
    0.725,
    0.675,
    0.7,
    0.675,
    0.725,
    0.675,
    0.0,
    0.0,
    0.0,
    0.675,
    0.725,
    0.675,
    0.675,
    0.725,
    0.725,
    0.4,
    0.7,
    0.675,
    0.675,
    0.725,
    0.65,
    0.725,
    0.4,
    0.7,
    0.675,
    0.7,
    0.625
  ],
  "train rewards": [
    0.525,
    0.0,
    0.7,
    0.6,
    0.525,
    0.525,
    0.525,
    0.525,
    0.75,
    0.0,
    0.625,
    0.0,
    0.75,
    0.625,
    0.0,
    0.575,
    0.45,
    0.5,
    0.0,
    0.475,
    0.75,
    0.525,
    0.525,
    0.525,
    0.75,
    0.525,
    0.725,
    0.525,
    0.75,
    0.525,
    0.0,
    0.0,
    0.0,
    0.525,
    0.75,
    0.525,
    0.525,
    0.8,
    0.8,
    0.475,
    0.75,
    0.525,
    0.525,
    0.8,
    0.525,
    0.425,
    0.475,
    0.75,
    0.525,
    0.575,
    0.475
  ],
  "time": [
    5.76817512512207,
    10.098337173461914,
    16.094905853271484,
    20.79250192642212,
    23.60491943359375,
    28.375181913375854,
    35.525784492492676,
    39.86219334602356,
    44.71889805793762,
    49.8517119884491,
    55.01379895210266,
    98.27599811553955,
    101.71268463134766,
    113.71893286705017,
    117.8060929775238,
    132.2441668510437,
    135.33624720573425,
    142.00402736663818,
    185.11206769943237,
    187.52986097335815,
    193.80418062210083,
    195.74023747444153,
    200.2944028377533,
    219.86664962768555,
    226.2981836795807,
    231.93919348716736,
    235.1822338104248,
    237.0091335773468,
    243.39496564865112,
    246.4324128627777,
    250.1479833126068,
    262.4206020832062,
    265.0034432411194,
    269.3237419128418,
    275.6986186504364,
    281.3232033252716,
    284.2279758453369,
    286.8359761238098,
    289.2675745487213,
    291.5680339336395,
    296.415513753891,
    303.23415327072144,
    306.6243426799774,
    309.23978447914124,
    316.08482241630554,
    319.1047775745392,
    321.1765561103821,
    326.1534152030945,
    329.90708899497986,
    331.8580458164215,
    336.1068985462189
  ],
  "sample times": 51
}