{
  "prompt": "\nQUESTION:\nA few years ago, Hitagi encountered a giant crab, who stole the whole of her body weight. Ever since, she tried to avoid contact with others, for fear that this secret might be noticed.\n\nTo get rid of the oddity and recover her weight, a special integer sequence is needed. Hitagi's sequence has been broken for a long time, but now Kaiki provides an opportunity.\n\nHitagi's sequence a has a length of n. Lost elements in it are denoted by zeros. Kaiki provides another sequence b, whose length k equals the number of lost elements in a (i.e. the number of zeros). Hitagi is to replace each zero in a with an element from b so that each element in b should be used exactly once. Hitagi knows, however, that, apart from 0, no integer occurs in a and b more than once in total.\n\nIf the resulting sequence is not an increasing sequence, then it has the power to recover Hitagi from the oddity. You are to determine whether this is possible, or Kaiki's sequence is just another fake. In other words, you should detect whether it is possible to replace each zero in a with an integer from b so that each integer from b is used exactly once, and the resulting sequence is not increasing.\n\n\n-----Input-----\n\nThe first line of input contains two space-separated positive integers n (2 \u2264 n \u2264 100) and k (1 \u2264 k \u2264 n) \u2014 the lengths of sequence a and b respectively.\n\nThe second line contains n space-separated integers a_1, a_2, ..., a_{n} (0 \u2264 a_{i} \u2264 200) \u2014 Hitagi's broken sequence with exactly k zero elements.\n\nThe third line contains k space-separated integers b_1, b_2, ..., b_{k} (1 \u2264 b_{i} \u2264 200) \u2014 the elements to fill into Hitagi's sequence.\n\nInput guarantees that apart from 0, no integer occurs in a and b more than once in total.\n\n\n-----Output-----\n\nOutput \"Yes\" if it's possible to replace zeros in a with elements in b and make the resulting sequence not increasing, and \"No\" otherwise.\n\n\n-----Examples-----\nInput\n4 2\n11 0 0 14\n5 4\n\nOutput\nYes\n\nInput\n6 1\n2 3 0 8 9 10\n5\n\nOutput\nNo\n\nInput\n4 1\n8 94 0 4\n89\n\nOutput\nYes\n\nInput\n7 7\n0 0 0 0 0 0 0\n1 2 3 4 5 6 7\n\nOutput\nYes\n\n\n\n-----Note-----\n\nIn the first sample:   Sequence a is 11, 0, 0, 14.  Two of the elements are lost, and the candidates in b are 5 and 4.  There are two possible resulting sequences: 11, 5, 4, 14 and 11, 4, 5, 14, both of which fulfill the requirements. Thus the answer is \"Yes\". \n\nIn the second sample, the only possible resulting sequence is 2, 3, 5, 8, 9, 10, which is an increasing sequence and therefore invalid.\n\nTUTORIAL:\nThe statement laid emphasis on the constraint that the elements are pairwise distinct. How is this important?\n\nIn fact, this implies that if the resulting sequence is increasing, then swapping any two of its elements will result in another sequence which is not increasing.\n\nAnd we're able to perform a swap on any resulting sequence if and only if k \u2265 2. Thus if k \u2265 2, the answer would always be \"Yes\". For cases where k = 1, we replace the only zero in sequence a with the only element in b, and check the whole sequence. Hackable solutions include those only checking the replaced element and its neighbours, and those missing the replaced element.\n\n\nInstructions:\n\n\nYou are a Python3 code generator.  Output **only** valid Python code. No explanations, no commentary, no filenames, no Markdown formatting. You will spit out a code block that can be pasted into any script. It must read the input, execute the logic and then print the output. Ensure that you invoke the main() or solve() function at the end if you're writing your code inside them.\nANSWER:\n",
  "codes": [
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    n, k = data[0], data[1]\n    a = data[2:n+2]\n    b = data[n+2:]\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n        return\n    \n    if k >= 2:\n        for i in range(n):\n            if a[i] == 0:\n                for j in range(k):\n                    if b[j] != a[i]:\n                        a[i] = b[j]\n                        break\n        if all(a[i] < a[i+1] for i in range(n-1)):\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif True:\n    solve()",
    "def solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n        return\n    \n    if k < 2:\n        print(\"Yes\")\n        return\n    \n    for i in range(n):\n        if a[i] == 0:\n            for j in range(k):\n                if b[j] != a[i]:\n                    a[i] = b[j]\n                    break\n    \n    if all(a[i] <= a[i+1] for i in range(n-1)):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif True:\n    solve()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n, k = int(data[0]), int(data[1])\n    a = list(map(int, data[2:n+2]))\n    b = list(map(int, data[n+2:]))\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def solve(n, k, a, b):\n    # Check if there are enough unique elements in b to replace all zeros in a\n    if len(set(b)) < k:\n        return \"No\"\n    \n    # Replace zeros in a with elements from b\n    for i in range(k):\n        a[i] = b[i]\n    \n    # Check if the resulting sequence is increasing\n    for i in range(1, n):\n        if a[i-1] > a[i]:\n            return \"No\"\n    \n    return \"Yes\"\n\n# Read input\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\n# Solve the problem\nprint(solve(n, k, a, b))",
    "def main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n        return\n    \n    if k < 2:\n        print(\"Yes\")\n        return\n    \n    for i in range(n):\n        if a[i] == 0:\n            for j in range(k):\n                if b[j] != a[i]:\n                    a[i] = b[j]\n                    break\n    \n    if all(a[i] <= a[i+1] for i in range(n-1)):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif True:\n    main()",
    "import sys\n\ndef solve():\n    n, k = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    b = list(map(int, sys.stdin.readline().split()))\n\n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n        return\n\n    if k < 2:\n        print(\"Yes\")\n        return\n\n    for i in range(n):\n        if a[i] == 0:\n            for j in range(k):\n                if b[j] != a[i]:\n                    a[i] = b[j]\n                    break\n\n    if all(a[i] <= a[i+1] for i in range(n-1)):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif True:\n    solve()",
    "def main():\n    input_data = input().split()\n    n, k = int(input_data[0]), int(input_data[1])\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n    # Check if there are enough unique elements in b to replace all zeros in a\n    if len(b) < k:\n        print(\"No\")\n        return\n\n    # Replace zeros in a with elements from b\n    for i in range(n):\n        if a[i] == 0:\n            a[i] = b.pop(0)\n\n    # Check if the resulting sequence is not increasing\n    for i in range(1, n):\n        if a[i] <= a[i - 1]:\n            print(\"No\")\n            return\n\n    print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    data = sys.stdin.read().split()\n    n, k = int(data[0]), int(data[1])\n    a = list(map(int, data[2:n+2]))\n    b = list(map(int, data[n+2:]))\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    n, k = data[0], data[1]\n    a = data[2:n+2]\n    b = data[n+2:]\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n        return\n    \n    if k >= 2:\n        for i in range(n):\n            if a[i] == 0:\n                for j in range(k):\n                    if b[j] != a[i]:\n                        a[i] = b[j]\n                        break\n        if all(a[i] < a[i+1] for i in range(n-1)):\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif True:\n    main()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n, k = int(data[0]), int(data[1])\n    a = list(map(int, data[2:n+2]))\n    b = list(map(int, data[n+2:]))\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n        return\n    \n    if k >= 2:\n        for i in range(n):\n            if a[i] == 0:\n                for j in range(k):\n                    if b[j] != a[i]:\n                        a[i] = b[j]\n                        break\n        if all(a[i] < a[i+1] for i in range(n-1)):\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif True:\n    solve()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    \n    def solve():\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        \n        if k == 1:\n            return 'Yes' if a[0] != b[0] else 'No'\n        \n        for i in range(n):\n            if a[i] == 0:\n                for j in range(k):\n                    if b[j] != a[i]:\n                        a[i] = b[j]\n                        break\n        \n        return 'Yes' if all(a[i] < a[i+1] for i in range(n-1)) else 'No'\n\n    print(solve())\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    n, k = int(data[0]), int(data[1])\n    a = list(map(int, data[2:n+2]))\n    b = list(map(int, data[n+2:]))\n\n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n, k = map(int, data[:2])\n    a = list(map(int, data[2:n+2]))\n    b = list(map(int, data[n+2:]))\n\n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    k = int(data[1])\n    a = list(map(int, data[2:n+2]))\n    b = list(map(int, data[n+2:]))\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    data = sys.stdin.read().splitlines()\n    n, k = map(int, data[0].split())\n    a = list(map(int, data[1].split()))\n    b = list(map(int, data[2].split()))\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n        return\n    \n    if k >= 2:\n        for i in range(n):\n            if a[i] == 0:\n                for j in range(k):\n                    if b[j] != a[i]:\n                        a[i] = b[j]\n                        break\n        if all(a[i] < a[i+1] for i in range(n-1)):\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    n = int(data[0])\n    k = int(data[1])\n    a = list(map(int, data[2:n+2]))\n    b = list(map(int, data[n+2:]))\n\n    if k < 2:\n        if a.count(0) == 1 and b.count(a[0]) == 1:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    else:\n        if all(b[i] != a[i] for i in range(n)):\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    \n    n, k = data[0], data[1]\n    a = data[2:n+2]\n    b = data[n+2:]\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n    # Check if there are enough unique elements in b to replace all zeros in a\n    if len(b) < k:\n        print(\"No\")\n        return\n\n    # Replace zeros in a with elements from b\n    for i in range(n):\n        if a[i] == 0:\n            a[i] = b.pop(0)\n\n    # Check if the resulting sequence is not increasing\n    for i in range(1, n):\n        if a[i] <= a[i-1]:\n            print(\"No\")\n            return\n\n    print(\"Yes\")\n\nif True:\n    solve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    \n    def parse_input():\n        data = input().split()\n        n, k = int(data[0]), int(data[1])\n        a = list(map(int, data[2:n+2]))\n        b = list(map(int, data[n+2:]))\n        return n, k, a, b\n    \n    def check_sequence(a):\n        for i in range(len(a)-1):\n            if a[i] > a[i+1]:\n                return False\n        return True\n    \n    def find_non_increasing_subsequence(a):\n        non_increasing_subsequence = []\n        current_subsequence = []\n        for num in a:\n            if not current_subsequence or num >= current_subsequence[-1]:\n                current_subsequence.append(num)\n            else:\n                non_increasing_subsequence.append(current_subsequence)\n                current_subsequence = [num]\n        non_increasing_subsequence.append(current_subsequence)\n        return non_increasing_subsequence\n    \n    def find_next_smaller_element(b, index):\n        for i in range(index + 1, len(b)):\n            if b[i] < b[index]:\n                return i\n        return -1\n    \n    def replace_zeros_with_elements(a, b):\n        non_increasing_subsequences = find_non_increasing_subsequence(a)\n        for subsequence in non_increasing_subsequences:\n            if len(subsequence) == 1:\n                continue\n            next_smaller_index = find_next_smaller_element(b, subsequence[0])\n            if next_smaller_index != -1:\n                a[subsequence[0]] = b[next_smaller_index]\n                b.pop(next_smaller_index)\n        return a\n    \n    def main():\n        n, k, a, b = parse_input()\n        a = replace_zeros_with_elements(a, b)\n        if check_sequence(a):\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    \n    if True:\n        main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    n, k = data[:2]\n    a = data[2:n+2]\n    b = data[n+2:]\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n        return\n    \n    if k >= 2:\n        for i in range(n):\n            if a[i] == 0:\n                for j in range(k):\n                    if b[j] != a[i]:\n                        a[i] = b[j]\n                        break\n        if all(a[i] < a[i+1] for i in range(n-1)):\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif True:\n    main()",
    "def check_sequence(a, b):\n    n = len(a)\n    k = sum(a == 0)\n    \n    if k < 2:\n        return True\n    \n    for i in range(n):\n        if a[i] == 0:\n            for j in range(k):\n                if b[j] != a[i]:\n                    a[i] = b[j]\n                    break\n            else:\n                return False\n    \n    return True\n\ndef main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n, k = map(int, data[:2])\n    a = list(map(int, data[2:n+2]))\n    b = list(map(int, data[n+2:]))\n\n    if check_sequence(a, b):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int,input().split()))\n    n,k=data[0],data[1]\n    a,b=data[2:n+2],data[n+2:]\n    if k==1:\n        if a[0]==b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k>=2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    def input(): return sys.stdin.readline().strip()\n    \n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n        return\n    \n    if k >= 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif True:\n    main()",
    "def main():\n    import sys\n\n    def solve():\n        input = sys.stdin.read\n        data = list(map(int, input().split()))\n        n, k = data[0], data[1]\n        a = data[2:n+2]\n        b = data[n+2:]\n        \n        if k == 1:\n            return \"Yes\" if a[0] != b[0] else \"No\"\n        \n        for i in range(n):\n            if a[i] == 0:\n                for j in range(k):\n                    if b[j] != a[i]:\n                        a[i] = b[j]\n                        break\n        \n        return \"Yes\" if all(a[i] < a[i+1] for i in range(n-1)) else \"No\"\n\n    print(solve())\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    \n    n, k = data[:2]\n    a = data[2:n+2]\n    b = data[n+2:]\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def solve():\n    import sys\n    data = sys.stdin.read().split()\n    n, k = int(data[0]), int(data[1])\n    a = list(map(int, data[2:n+2]))\n    b = list(map(int, data[n+2:]))\n\n    # Check if there are enough unique elements in b to replace all zeros in a\n    if len(b) < sum(a):\n        print(\"No\")\n        return\n\n    # Try replacing each zero in a with an element from b\n    for i in range(n):\n        if a[i] == 0:\n            # Find the smallest element in b that is greater than the current zero in a\n            min_b = min([b[j] for j in range(k) if b[j] > a[i]])\n            # Replace the zero in a with the found element\n            a[i] = min_b\n\n    # Check if the resulting sequence is not increasing\n    if a != sorted(a):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif True:\n    solve()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    n, k = map(int, data[0].split())\n    a = list(map(int, data[1].split()))\n    b = list(map(int, data[2].split()))\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    data = sys.stdin.read().split()\n    \n    n, k = int(data[0]), int(data[1])\n    a = list(map(int, data[2:n+2]))\n    b = list(map(int, data[n+2:]))\n\n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n, k = map(int, data[0:2])\n    a = list(map(int, data[2:2+n]))\n    b = list(map(int, data[2+n:2+n+k]))\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    def read_input():\n        return list(map(int, sys.stdin.read().split()))\n\n    def solve(n, k, a, b):\n        count = [0] * 201\n        for num in a:\n            count[num] += 1\n        \n        for i in range(k):\n            if count[b[i]] == 0:\n                return False\n            count[b[i]] -= 1\n        \n        for i in range(n - k):\n            if count[a[i + k]] > 0:\n                return False\n            count[a[i + k]] -= 1\n        \n        return True\n    \n    n, k = read_input()\n    a = read_input()\n    b = read_input()\n    \n    if solve(n, k, a, b):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    \n    def solve():\n        input = sys.stdin.read\n        data = list(map(int, input().split()))\n        \n        n, k = data[0], data[1]\n        a = data[2:n+2]\n        b = data[n+2:]\n        \n        if k == 1:\n            return \"Yes\" if a[0] != b[0] else \"No\"\n        \n        for i in range(n):\n            if a[i] == 0:\n                for j in range(k):\n                    if b[j] != a[i]:\n                        a[i] = b[j]\n                        break\n        \n        return \"Yes\" if all(a[i] < a[i+1] for i in range(n-1)) else \"No\"\n    \n    print(solve())\n\nif True:\n    main()",
    "def solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    \n    # Check if there are enough unique elements in b to replace all zeros in a\n    if len(b) < k:\n        print(\"No\")\n        return\n    \n    # Replace zeros in a with elements from b\n    for i in range(n):\n        if a[i] == 0:\n            a[i] = b.pop(0)\n    \n    # Check if the resulting sequence is not increasing\n    for i in range(1, n):\n        if a[i] <= a[i-1]:\n            print(\"No\")\n            return\n    \n    print(\"Yes\")\n\nif True:\n    solve()",
    "def main():\n    import sys\n    data = sys.stdin.read().strip()\n    lines = data.split('\\n')\n    n, k = map(int, lines[0].split())\n    a = list(map(int, lines[1].split()))\n    b = list(map(int, lines[2].split()))\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        for i in range(n):\n            if a[i] == 0:\n                for j in range(k):\n                    if b[j] != a[i]:\n                        a[i] = b[j]\n                        break\n        if all(a[i] < a[i+1] for i in range(n-1)):\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif True:\n    main()",
    "def solve():\n    import sys\n    input=sys.stdin.read\n    data=input().split()\n    n=int(data[0])\n    k=int(data[1])\n    a=list(map(int,data[2:n]))\n    b=list(map(int,data[n:]))\n    if k==1:\n        if a[0]==b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k>=2:\n        print(\"Yes\")\n\nif True:\n    solve()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    \n    n = data[0]\n    k = data[1]\n    a = data[2:n+2]\n    b = data[n+2:]\n    \n    if k < 2:\n        if a.count(0) == 1 and b.count(a[0]) == 1:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    else:\n        if all(b[i] != a[i] for i in range(n)):\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    data = sys.stdin.read()\n    sys.stdin.close()\n    solution = solve(data)\n    print(solution)\n\ndef solve(data):\n    lines = data.strip().split('\\n')\n    n, k = map(int, lines[0].split())\n    a = list(map(int, lines[1].split()))\n    b = list(map(int, lines[2].split()))\n    \n    if k == 1:\n        return 'Yes' if a[0] != b[0] else 'No'\n    \n    if len(set(a)) < len(b):\n        return 'No'\n    \n    for i in range(n):\n        if a[i] == 0:\n            if all(x != b[i] for x in a[:i]):\n                return 'Yes'\n    \n    return 'No'\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    n = data[0]\n    k = data[1]\n    a = data[2:n+2]\n    b = data[n+2:]\n    \n    if k < 2:\n        if a.count(0) == 1 and b.count(a[0]) == 1:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    else:\n        for i in range(n):\n            if a[i] == 0:\n                if b.count(i) > 0:\n                    b[b.index(i)] = -1\n                else:\n                    print(\"No\")\n                    return\n        for i in range(n-1):\n            if a[i] > a[i+1]:\n                print(\"No\")\n                return\n        print(\"Yes\")\n\nif True:\n    main()",
    "import sys\nfrom typing import List\n\ndef solve(n: int, k: int, a: List[int], b: List[int]) -> str:\n    # Check if there are enough unique elements in b to replace all zeros in a\n    if len(set(b)) < len(a):\n        return \"No\"\n    \n    # Replace zeros in a with elements from b\n    for i in range(k):\n        a[i] = b[i]\n    \n    # Check if the resulting sequence is increasing\n    for i in range(1, n):\n        if a[i] <= a[i-1]:\n            return \"No\"\n    \n    return \"Yes\"\n\nif True:\n    input_data = sys.stdin.read().split()\n    n, k = map(int, input_data[0].split())\n    a = list(map(int, input_data[1].split()))\n    b = list(map(int, input_data[2].split()))\n    print(solve(n, k, a, b))",
    "def main():\n    import sys\n    data = sys.stdin.read().split()\n    n, k = map(int, data[0].split())\n    a = list(map(int, data[1].split()))\n    b = list(map(int, data[2].split()))\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    N, K = int(data[0]), int(data[1])\n    A = list(map(int, data[2:N+2]))\n    B = list(map(int, data[N+2:]))\n    \n    if K == 1:\n        if A[0] != B[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif K >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    data = list(map(int, sys.stdin.read().split()))\n    n, k = data[0], data[1]\n    a = data[2:n+2]\n    b = data[n+2:]\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input=sys.stdin.read\n    data=input().split()\n    n=int(data[0])\n    k=int(data[1])\n    a=list(map(int,data[2:n]))\n    b=list(map(int,data[n:]))\n    if k==1:\n        if a[0]==b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k>=2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    data = sys.stdin.read().splitlines()\n    \n    def solve(n, k, a, b):\n        if k == 1:\n            return 'Yes' if a[0] != b[0] else 'No'\n        \n        for i in range(k):\n            if a[i] == 0:\n                for j in range(len(b)):\n                    if b[j] != 0:\n                        a[i] = b[j]\n                        break\n        \n        return 'Yes' if all(a[i] < a[i+1] for i in range(n-1)) else 'No'\n\n    n, k = map(int, data[0].split())\n    a = list(map(int, data[1].split()))\n    b = list(map(int, data[2].split()))\n\n    print(solve(n, k, a, b))\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n\n    n, k = map(int, data[:2])\n    a = list(map(int, data[2:n+2]))\n    b = list(map(int, data[n+2:]))\n\n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().strip().split()))\n    n, k = data[0], data[1]\n    a = data[2:n+2]\n    b = data[n+2:]\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    data = sys.stdin.read().split()\n    n = int(data[0])\n    k = int(data[1])\n    a = list(map(int, data[2:n+2]))\n    b = list(map(int, data[n+2:]))\n\n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    elif k >= 2:\n        print(\"Yes\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n\n    def solve():\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n\n        # Check if there are enough unique elements in b to replace all zeros in a\n        if len(b) < k:\n            return \"No\"\n\n        # Replace zeros in a with elements from b\n        for i in range(n):\n            if a[i] == 0:\n                a[i] = b.pop(0)\n\n        # Check if the resulting sequence is not increasing\n        for i in range(1, n):\n            if a[i] <= a[i - 1]:\n                return \"No\"\n\n        return \"Yes\"\n\n    print(solve())\n\nif True:\n    main()",
    "def main():\n    import sys\n    def input(): return sys.stdin.readline().strip()\n    def read_ints(): return list(map(int, input().split()))\n    \n    n, k = read_ints()\n    a = read_ints()\n    b = read_ints()\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n        return\n    \n    if k >= 2:\n        print(\"Yes\")\n        return\n    \n    if a.count(0) > 1:\n        print(\"No\")\n        return\n    \n    if a[0] == 0:\n        if b[0] < a[1]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n        return\n    \n    if a[-1] == 0:\n        if b[-1] > a[-2]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n        return\n    \n    print(\"No\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    \n    n, k = data[0], data[1]\n    a = data[2:n]\n    b = data[n:]\n    \n    if k < 2:\n        if a.count(0) == 1 and b.count(a[0]) == 1:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    else:\n        if all(b[i] != a[i] for i in range(n)):\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n, k = map(int, data[0].split())\n    a = list(map(int, data[1].split()))\n    b = list(map(int, data[2].split()))\n    \n    if k == 1:\n        if a[0] != b[0]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n        return\n    \n    if k >= 2:\n        for i in range(n):\n            if a[i] == 0:\n                for j in range(k):\n                    if b[j] != a[i]:\n                        a[i] = b[j]\n                        break\n        if all(a[i] < a[i+1] for i in range(n-1)):\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    \n    n, k = data[0], data[1]\n    a = data[2:k+2]\n    b = data[k+2:]\n    \n    if k < 2:\n        if a.count(0) == 1 and b.count(a[0]) == 1:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    else:\n        if all(b[i] != a[i] for i in range(k)):\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif True:\n    main()"
  ],
  "rewards": [
    0.5531914893617021,
    0.7872340425531915,
    0.851063829787234,
    0.1276595744680851,
    0.7872340425531915,
    0.7872340425531915,
    0.1276595744680851,
    0.851063829787234,
    0.5531914893617021,
    0.5531914893617021,
    0.0,
    0.851063829787234,
    0.851063829787234,
    0.851063829787234,
    0.5531914893617021,
    0.19148936170212766,
    0.851063829787234,
    0.1276595744680851,
    0.0,
    0.5531914893617021,
    0.0,
    0.44680851063829785,
    0.851063829787234,
    0.5531914893617021,
    0.851063829787234,
    0.1702127659574468,
    0.0,
    0.851063829787234,
    0.851063829787234,
    0.0,
    0.5531914893617021,
    0.1276595744680851,
    0.5531914893617021,
    0.3829787234042553,
    0.19148936170212766,
    0.723404255319149,
    0.14893617021276595,
    0.0,
    0.0,
    0.851063829787234,
    0.851063829787234,
    0.3829787234042553,
    0.5531914893617021,
    0.851063829787234,
    0.851063829787234,
    0.851063829787234,
    0.0,
    0.851063829787234,
    0.14893617021276595,
    0.0,
    0.40425531914893614
  ],
  "train rewards": [
    0.44680851063829785,
    0.5531914893617021,
    0.723404255319149,
    0.2765957446808511,
    0.5531914893617021,
    0.5531914893617021,
    0.1702127659574468,
    0.723404255319149,
    0.44680851063829785,
    0.44680851063829785,
    0.0,
    0.723404255319149,
    0.723404255319149,
    0.723404255319149,
    0.44680851063829785,
    0.3191489361702128,
    0.723404255319149,
    0.1702127659574468,
    0.0,
    0.44680851063829785,
    0.0,
    0.5531914893617021,
    0.723404255319149,
    0.44680851063829785,
    0.723404255319149,
    0.2978723404255319,
    0.0,
    0.723404255319149,
    0.723404255319149,
    0.0,
    0.44680851063829785,
    0.1702127659574468,
    0.44680851063829785,
    0.5106382978723404,
    0.3191489361702128,
    0.6382978723404256,
    0.2765957446808511,
    0.0,
    0.0,
    0.723404255319149,
    0.723404255319149,
    0.5106382978723404,
    0.44680851063829785,
    0.723404255319149,
    0.723404255319149,
    0.723404255319149,
    0.0,
    0.723404255319149,
    0.2765957446808511,
    0.0,
    0.5106382978723404
  ],
  "time": [
    11.189384460449219,
    16.07850670814514,
    19.598028659820557,
    24.207148551940918,
    29.069054126739502,
    34.24686026573181,
    39.23702883720398,
    42.46257305145264,
    47.27111601829529,
    52.26884961128235,
    56.73060870170593,
    59.91645407676697,
    62.877405405044556,
    66.03126263618469,
    71.09761357307434,
    75.03191304206848,
    77.9752721786499,
    81.9862208366394,
    92.95420551300049,
    97.36543941497803,
    102.47832083702087,
    105.09182929992676,
    108.4419047832489,
    113.24433994293213,
    115.77567195892334,
    121.86386203765869,
    124.75097107887268,
    127.77561378479004,
    130.64489030838013,
    135.70197296142578,
    140.57902789115906,
    144.39047193527222,
    149.4142620563507,
    152.38304543495178,
    155.90777969360352,
    160.71896934509277,
    165.44009160995483,
    171.10286378860474,
    173.91644310951233,
    176.86552000045776,
    179.80789589881897,
    182.7014617919922,
    190.19413995742798,
    193.12286281585693,
    195.95011591911316,
    198.90309834480286,
    203.63443636894226,
    209.16615891456604,
    212.0493984222412,
    216.56872463226318,
    219.60245823860168
  ],
  "sample times": 51
}