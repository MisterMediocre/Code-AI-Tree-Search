{
  "prompt": "\nQUESTION:\nA telephone number is a sequence of exactly $11$ digits such that its first digit is 8.\n\nVasya and Petya are playing a game. Initially they have a string $s$ of length $n$ ($n$ is odd) consisting of digits. Vasya makes the first move, then players alternate turns. In one move the player must choose a character and erase it from the current string. For example, if the current string 1121, after the player's move it may be 112, 111 or 121. The game ends when the length of string $s$ becomes 11. If the resulting string is a telephone number, Vasya wins, otherwise Petya wins.\n\nYou have to determine if Vasya has a winning strategy (that is, if Vasya can win the game no matter which characters Petya chooses during his moves).\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($13 \\le n < 10^5$, $n$ is odd) \u2014 the length of string $s$.\n\nThe second line contains the string $s$ ($|s| = n$) consisting only of decimal digits.\n\n\n-----Output-----\n\nIf Vasya has a strategy that guarantees him victory, print YES.\n\nOtherwise print NO.\n\n\n-----Examples-----\nInput\n13\n8380011223344\n\nOutput\nYES\n\nInput\n15\n807345619350641\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first example Vasya needs to erase the second character. Then Petya cannot erase a character from the remaining string 880011223344 so that it does not become a telephone number.\n\nIn the second example after Vasya's turn Petya can erase one character character 8. The resulting string can't be a telephone number, because there is no digit 8 at all.\n\nTUTORIAL:\nLet's understand how players should act.\n\nVasya needs to delete the first digit that is not equal to 8, because the first digit of telephone number should be 8, and the first digit not equal to 8 is preventing it.\n\nPetya needs to delete the first digit equal to 8, for the same reasons.\n\nSo, all that we need to do is delete first \u230a(n - 11) / 2\u230b digits not equal to 8 (if they exist), and first \u230a(n - 11) / 2\u230b digits equal to 8 (again if they exist). It's enough to stop when there is either no 8's left or no non-8's because the latter moves won't change the result of the game anyway. Finally, if first digit of resulting string is 8, then Vasya wins, otherwise Petya.\n\nOverall complexity: O(n).\n\n\nInstructions:\n\n\nYou are a Python3 code generator.  Output **only** valid Python code. No explanations, no commentary, no filenames, no Markdown formatting. You will spit out a code block that can be pasted into any script. It must read the input, execute the logic and then print the output. Ensure that you invoke the main() or solve() function at the end if you're writing your code inside them.\nANSWER:\n",
  "codes": [
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Calculate the number of digits to remove\n    num_to_remove = min(count_8, (n - 11) // 2)\n    \n    # Remove the required number of digits\n    s = s[:num_to_remove] + s[num_to_remove + 1:]\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Call the solve function to start the game\nsolve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    count_8 = s.count('8')\n    count_not_8 = len(s) - count_8\n    \n    if count_8 == 0 or count_not_8 == 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nsolve()",
    "def solve(n, s):\n    count_8 = s.count('8')\n    count_not_8 = s.count('9') + s.count('0') + s.count('1') + s.count('2') + s.count('3') + s.count('4') + s.count('5') + s.count('6') + s.count('7')\n\n    if count_8 == 0 or count_not_8 == 0:\n        return 'NO'\n    \n    if count_8 > count_not_8:\n        return 'NO'\n\n    return 'YES'\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(s):\n    n = len(s)\n    count_8 = s.count('8')\n    count_not_8 = n - count_8\n    \n    if count_8 == 0 or count_not_8 == 0:\n        return 'NO'\n    \n    vasya_moves = min(count_8 // 2, count_not_8 // 2)\n    petya_moves = max(0, count_8 % 2) + max(0, count_not_8 % 2)\n    \n    if s[0] != '8':\n        vasya_moves += 1\n    \n    if vasya_moves > petya_moves:\n        return 'YES'\n    else:\n        return 'NO'\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(s)\n\n# Print the result\nprint(result)",
    "def main():\n    n = int(input())\n    s = input()\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Calculate the number of digits to remove\n    num_to_remove = min(count_8, (n - 11) // 2)\n    \n    # Remove the specified number of digits\n    s = s[:num_to_remove] + s[num_to_remove + 1:]\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    count_not_8 = len(s) - count_8\n    \n    if count_8 == 0 or count_not_8 == 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = list(map(int, input()))\n    \n    # Count the number of 8's in the string\n    count_8 = sum(s)\n    \n    # Calculate the number of digits to remove\n    remove_count = min(count_8 // 2, (n - 11) // 2)\n    \n    # Remove the required number of digits\n    for _ in range(remove_count):\n        if s[0] != 8:\n            s.pop(0)\n        else:\n            s.pop(0)\n            break\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == 8:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Main function to run the solution\nif True:\n    solve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    count_8 = s.count('8')\n    count_not_8 = len(s) - count_8\n    \n    if count_8 == 0 or count_not_8 == 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = list(input())\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Calculate the number of digits to remove\n    num_to_remove = min(count_8, (n - 11) // 2)\n    \n    # Remove the required number of digits\n    for _ in range(num_to_remove):\n        if '8' in s:\n            s.remove('8')\n        else:\n            break\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Main function to run the solution\nif True:\n    solve()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def check(s):\n        return len(s) == 11 and s[0] == '8'\n    \n    def find_first_non_8(s):\n        for i in range(len(s)):\n            if s[i] != '8':\n                return i\n        return -1\n    \n    def find_first_8(s):\n        for i in range(len(s)):\n            if s[i] == '8':\n                return i\n        return -1\n    \n    vasya_turn = True\n    while len(s) > 11:\n        if vasya_turn:\n            first_non_8_index = find_first_non_8(s)\n            if first_non_8_index != -1:\n                s = s[:first_non_8_index] + s[first_non_8_index+1:]\n        else:\n            first_8_index = find_first_8(s)\n            if first_8_index != -1:\n                s = s[:first_8_index] + s[first_8_index+1:]\n        vasya_turn = not vasya_turn\n    \n    if check(s):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    n = data[0]\n    s = data[1:]\n    \n    def check(s):\n        return len(s) == 11 and s[0] == '8'\n    \n    def play(s):\n        while len(s) > 11:\n            if '8' in s:\n                s = s[:s.index('8')] + s[s.index('8') + 1:]\n            else:\n                s = s[:-1]\n        \n        return check(s)\n    \n    if play(s):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    count_not_8 = len(s) - count_8\n    \n    if count_8 == 0 or count_not_8 == 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif True:\n    main()",
    "def main():\n    input()\n    s = input().strip()\n    n = len(s)\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Calculate the number of digits to remove\n    num_to_remove = min(count_8, (n - 11) // 2)\n    \n    # Remove the specified number of digits\n    s = s[:num_to_remove] + s[num_to_remove + 1:]\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    \n    n = int(data[0])\n    s = data[1]\n    \n    count_8 = s.count('8')\n    count_not_8 = len(s) - count_8\n    \n    if count_8 == 0 or count_not_8 == 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif True:\n    main()",
    "def main():\n    n = int(input())\n    s = list(input())\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Calculate the number of digits to remove\n    num_to_remove = min(count_8, (n - 11) // 2)\n    \n    # Remove the specified number of digits\n    s[:num_to_remove] = []\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    n = int(input())\n    s = input()\n    \n    count_8 = s.count('8')\n    count_not_8 = len(s) - count_8\n    \n    if count_8 == 0 or count_not_8 == 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    \n    def solve():\n        n = int(input().strip())\n        s = input().strip()\n        \n        count_8 = s.count('8')\n        count_not_8 = len(s) - count_8\n        \n        if count_8 == 0 or count_not_8 == 0:\n            return 'NO'\n        \n        if count_8 % 2 != 0:\n            return 'NO'\n        \n        return 'YES'\n    \n    print(solve())\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    count_8 = s.count('8')\n    count_not_8 = len(s) - count_8\n    if count_8 == 0 or count_not_8 == 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif True:\n    main()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Find the index of the first non-8 digit\n    i = 0\n    while i < n and s[i] != '8':\n        i += 1\n    \n    # If there are no non-8 digits, Vasya loses\n    if i == n:\n        print(\"NO\")\n        return\n    \n    # Find the index of the first 8 digit\n    j = i + 1\n    while j < n and s[j] != '8':\n        j += 1\n    \n    # If there are no 8 digits, Vasya loses\n    if j == n:\n        print(\"NO\")\n        return\n    \n    # Delete the first \u230a(n - 11) / 2\u230b digits not equal to 8\n    if i > 0:\n        s = s[:i]\n    \n    # Delete the first \u230a(n - 11) / 2\u230b digits equal to 8\n    if j < n:\n        s = s[:j]\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8' and len(s) == 11:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Calculate the number of digits to delete\n    delete_count = min(count_8, (n - 11) // 2)\n    \n    # Construct the new string by deleting the required digits\n    new_string = s[:delete_count] + s[delete_count+count_8:]\n    \n    # Check if the new string is a telephone number\n    if new_string[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    input_data = input().split()\n    n = int(input_data[0])\n    s = input_data[1]\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Calculate the number of digits to remove\n    num_to_remove = min(count_8, (n - 11) // 2)\n    \n    # Remove the required number of digits\n    s = s[:num_to_remove] + s[num_to_remove + 1:]\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    n = int(input())\n    s = list(map(int, input()))\n    \n    # Count the number of 8's in the string\n    count_8 = sum(s)\n    \n    # Calculate the number of digits to remove\n    digits_to_remove = min(count_8, (n - 11) // 2)\n    \n    # Remove the specified number of digits\n    s[:digits_to_remove] = [0] * digits_to_remove\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == 8:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    count_8 = s.count('8')\n    count_not_8 = len(s) - count_8\n    \n    if count_8 == 0 or count_not_8 == 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def is_valid(s):\n        return len(s) == 11 and s[0] == '8'\n    \n    def count_digits(s, digit):\n        return sum(1 for char in s if char == digit)\n    \n    vasya_moves = 0\n    petya_moves = 0\n    \n    while True:\n        if vasya_moves >= n // 2:\n            break\n        \n        if count_digits(s, '8') > 0:\n            s = s.replace('8', '', 1)\n            vasya_moves += 1\n        else:\n            break\n    \n    while True:\n        if petya_moves >= n // 2:\n            break\n        \n        if count_digits(s, '8') > 0:\n            s = s.replace('8', '', 1)\n            petya_moves += 1\n        else:\n            break\n    \n    if is_valid(s):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = list(data[1])\n    \n    def check(s):\n        return len(s) == 11 and s[0] == '8'\n    \n    def play(s):\n        while True:\n            if check(s):\n                return True\n            if '8' in s:\n                i = s.index('8')\n                del s[i]\n            else:\n                break\n    \n    if play(s):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def count_digits(s, digit):\n        return sum(1 for char in s if char == digit)\n    \n    vasya_moves = count_digits(s, '8')\n    petya_moves = count_digits(s, '8') // 2\n    \n    if vasya_moves > petya_moves:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "import sys\n\ndef solve():\n    n = int(input())\n    s = input()\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Calculate the number of digits to remove\n    num_to_remove = min(count_8, (n - 11) // 2)\n    \n    # Remove the specified number of digits\n    s = s[:num_to_remove] + s[num_to_remove + 1:]\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Main function\nif True:\n    solve()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().splitlines()\n    n = int(data[0])\n    s = data[1]\n    \n    def is_valid(s):\n        return len(s) == 11 and s[0] == '8'\n    \n    def count_digits(s, digit):\n        return sum(1 for char in s if char == digit)\n    \n    vasya_moves = []\n    petya_moves = []\n    \n    for i in range(n):\n        if s[i] != '8':\n            vasya_moves.append(i)\n        else:\n            petya_moves.append(i)\n    \n    if len(vasya_moves) > len(petya_moves):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    vasya_wins = False\n    for i in range(n):\n        if s[i] != '8':\n            vasya_wins = True\n            break\n    if vasya_wins:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def check_phone_number(s):\n        return len(s) == 11 and s[0] == '8'\n    \n    def find_first_non_8_index(s):\n        for i in range(len(s)):\n            if s[i] != '8':\n                return i\n        return -1\n    \n    def find_first_8_index(s):\n        for i in range(len(s)):\n            if s[i] == '8':\n                return i\n        return -1\n    \n    def play_game(s):\n        non_8_count = find_first_non_8_index(s)\n        if non_8_count == -1:\n            return False\n        \n        s = s[:non_8_count] + s[non_8_count+1:]\n        \n        8_count = find_first_8_index(s)\n        if 8_count == -1:\n            return True\n        \n        s = s[:8_count] + s[8_count+1:]\n        \n        return play_game(s)\n    \n    if play_game(s):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    n = int(input())\n    s = input()\n    \n    # Find the index of the first non-8 digit\n    i = 0\n    while i < n and s[i] != '8':\n        i += 1\n    \n    # If there are no non-8 digits, Vasya loses\n    if i == n:\n        print(\"NO\")\n        return\n    \n    # Find the index of the first 8 digit\n    j = i + 1\n    while j < n and s[j] != '8':\n        j += 1\n    \n    # If there are no 8 digits, Vasya loses\n    if j == n:\n        print(\"NO\")\n        return\n    \n    # Delete the first \u230a(n - 11) / 2\u230b digits not equal to 8\n    if i > 0:\n        s = s[:i]\n    \n    # Delete the first \u230a(n - 11) / 2\u230b digits equal to 8\n    if j < n:\n        s = s[:j]\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8' and len(s) == 11:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    data = sys.stdin.read().splitlines()\n    n = int(data[0])\n    s = data[1]\n    \n    def check(s):\n        return len(s) == 11 and s[0] == '8'\n    \n    def find_first_non_8(s):\n        for i in range(len(s)):\n            if s[i] != '8':\n                return i\n        return -1\n    \n    def find_first_8(s):\n        for i in range(len(s)):\n            if s[i] == '8':\n                return i\n        return -1\n    \n    def play_game(s):\n        non_8_count = find_first_non_8(s)\n        if non_8_count == -1:\n            return False\n        \n        s = s[:non_8_count] + s[non_8_count+1:]\n        \n        8_count = find_first_8(s)\n        if 8_count == -1:\n            return True\n        \n        s = s[:8_count] + s[8_count+1:]\n        \n        return play_game(s)\n    \n    if play_game(s):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def check_telephone_number(s):\n        return len(s) == 11 and s[0] == '8'\n    \n    def find_first_non_8_index(s):\n        for i in range(len(s)):\n            if s[i] != '8':\n                return i\n        return -1\n    \n    def find_first_8_index(s):\n        for i in range(len(s)):\n            if s[i] == '8':\n                return i\n        return -1\n    \n    def play_game(s):\n        non_8_count = find_first_non_8_index(s)\n        if non_8_count == -1:\n            return False\n        \n        s = s[:non_8_count] + s[non_8_count+1:]\n        \n        8_count = find_first_8_index(s)\n        if 8_count == -1:\n            return True\n        \n        s = s[:8_count] + s[8_count+1:]\n        \n        return play_game(s)\n    \n    if play_game(s):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    # Count occurrences of '8' in the string\n    count_8 = s.count('8')\n    \n    # Calculate the number of moves required\n    moves_required = min(count_8, (n - 11) // 2)\n    \n    # Check if Vasya can win\n    if moves_required == 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif True:\n    main()",
    "def main():\n    import sys\n\n    def solve():\n        n = int(sys.stdin.readline())\n        s = sys.stdin.readline().strip()\n        \n        count_8 = s.count('8')\n        count_not_8 = len(s) - count_8\n        \n        if count_8 == 0 or count_not_8 == 0:\n            return \"NO\"\n        \n        if count_8 % 2 != 0:\n            return \"NO\"\n        \n        return \"YES\"\n\n    print(solve())\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    # Count the occurrences of '8' in the string\n    count_8 = s.count('8')\n    \n    # Calculate the minimum number of moves required\n    min_moves = (n - 11) // 2\n    \n    # Check if Vasya can win\n    if count_8 >= min_moves:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def check(s):\n        return s[:1] == '8' and all(c in '0123456789' for c in s[1:])\n    \n    count_8 = s.count('8')\n    count_not_8 = len(s) - count_8\n    \n    if count_8 > 0 and count_not_8 > 0:\n        if count_8 % 2 == 0 and count_not_8 % 2 == 0:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    elif count_8 > 0:\n        print(\"YES\")\n    elif count_not_8 > 0:\n        print(\"NO\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def check_vasya_win(s):\n    n = len(s)\n    count_8 = s.count('8')\n    \n    # Calculate the number of digits to remove\n    remove_count = min(count_8 // 2, (n - 11) // 2)\n    \n    # Remove the specified number of digits\n    s = s[:remove_count] + s[remove_count + 1:]\n    \n    # Check if the resulting string is a telephone number\n    return s[0] == '8'\n\n# Read input\nn = int(input())\ns = input()\n\n# Determine if Vasya has a winning strategy\nresult = \"YES\" if check_vasya_win(s) else \"NO\"\nprint(result)",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    # Find the index of the first occurrence of '8'\n    first_8_index = s.find('8')\n    \n    # Calculate the number of digits to remove\n    num_digits_to_remove = min(first_8_index, n - 11)\n    \n    # Remove the specified number of digits\n    s = s[:first_8_index] + s[first_8_index + num_digits_to_remove:]\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def count_digits(digit):\n        return sum(1 for char in s if char == digit)\n    \n    vasya_moves = count_digits('8') // 2\n    petya_moves = count_digits('8') // 2\n    \n    if vasya_moves > petya_moves:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def check(s):\n        if len(s) != 11:\n            return False\n        if s[0] != '8':\n            return False\n        for i in range(1, 11):\n            if s[i] == '8':\n                return True\n        return False\n    \n    count_8 = s.count('8')\n    count_not_8 = s.count('0') + s.count('1') + s.count('2') + s.count('3') + s.count('4') + s.count('5') + s.count('6') + s.count('7')\n    \n    if count_8 > count_not_8:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    n = int(input())\n    s = input()\n    \n    def count_digits(digit):\n        return sum(1 for char in s if char == digit)\n    \n    vasya_moves = count_digits('8') // 2\n    petya_moves = count_digits('8') // 2\n    \n    if vasya_moves > petya_moves:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def check(s):\n        return len(set(s)) == 1 and s[0] == '8'\n    \n    count_8 = sum(1 for c in s if c == '8')\n    count_non_8 = sum(1 for c in s if c != '8')\n    \n    if count_8 > count_non_8:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def check(s):\n        return s == '8' * len(s)\n    \n    def find_first_non_8(s):\n        for i in range(len(s)):\n            if s[i] != '8':\n                return i\n        return -1\n    \n    def find_first_8(s):\n        for i in range(len(s)):\n            if s[i] == '8':\n                return i\n        return -1\n    \n    def play_game(s):\n        non_8_count = find_first_non_8(s)\n        if non_8_count == -1:\n            return False\n        \n        s = s[:non_8_count] + s[non_8_count+1:]\n        \n        8_count = find_first_8(s)\n        if 8_count == -1:\n            return True\n        \n        s = s[:8_count] + s[8_count+1:]\n        \n        return play_game(s)\n    \n    if play_game(s):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def check(s):\n        return '8' in s\n    \n    def count(s, c):\n        return s.count(c)\n    \n    vasya_wins = False\n    petya_wins = False\n    \n    # Delete first \u230a(n - 11) / 2\u230b digits not equal to 8\n    if count(s, '8') > 0:\n        vasya_wins = True\n    \n    # Delete first \u230a(n - 11) / 2\u230b digits equal to 8\n    if count(s, '8') > 0:\n        petya_wins = True\n    \n    if vasya_wins:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    n = int(input())\n    s = input()\n    \n    # Remove all non-8 characters\n    s = ''.join(filter(lambda x: x == '8', s))\n    \n    # Check if the resulting string is a telephone number\n    if len(s) != 11 or s[0] != '8':\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = list(map(int, data[1]))\n    \n    def check(s):\n        return len(s) == 11 and s[0] == 8\n    \n    def play(s):\n        while True:\n            if check(s):\n                return \"YES\"\n            \n            count_8 = sum(1 for x in s if x == 8)\n            count_non_8 = sum(1 for x in s if x != 8)\n            \n            if count_8 > 0:\n                s.pop(0)\n            elif count_non_8 > 0:\n                s.pop(-1)\n            else:\n                break\n    \n    result = play(s)\n    print(result)\n\nif True:\n    main()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Count occurrences of '8' and other digits\n    count_8 = s.count('8')\n    count_other = len(s) - count_8\n    \n    # Calculate the number of moves needed\n    moves_needed = min(count_8 // 2, count_other // 2)\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Main function\nif True:\n    solve()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def check(s):\n        return s[0] == '8' and s[-1] == '8'\n    \n    def count_digits(s, digit):\n        return sum(1 for char in s if char == digit)\n    \n    vasya_moves = 0\n    petya_moves = 0\n    \n    while len(s) > 11:\n        if vasya_moves % 2 == 0:\n            # Vasya deletes non-8 digits\n            non_8_count = count_digits(s, '8')\n            if non_8_count > 0:\n                s = s[:non_8_count] + s[non_8_count+1:]\n                vasya_moves += 1\n            else:\n                break\n        else:\n            # Petya deletes 8 digits\n            eight_count = count_digits(s, '8')\n            if eight_count > 0:\n                s = s[:eight_count] + s[eight_count+1:]\n                petya_moves += 1\n            else:\n                break\n    \n    if check(s):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def check(s):\n        return len(s) == 11 and s.startswith('8')\n    \n    def find_first_non_8(s):\n        for i in range(len(s)):\n            if s[i] != '8':\n                return i\n        return -1\n    \n    def find_first_8(s):\n        for i in range(len(s)):\n            if s[i] == '8':\n                return i\n        return -1\n    \n    def play_game(s):\n        non_8_count = find_first_non_8(s)\n        if non_8_count == -1:\n            return False\n        \n        s = s[:non_8_count] + s[non_8_count+1:]\n        \n        8_count = find_first_8(s)\n        if 8_count == -1:\n            return True\n        \n        s = s[:8_count] + s[8_count+1:]\n        \n        return play_game(s)\n    \n    if play_game(s):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()",
    "def main():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def count_digit(digit):\n        return sum(1 for char in s if char == digit)\n    \n    vasya_moves = count_digit('8') // 2\n    petya_moves = count_digit('8') // 2\n    \n    if vasya_moves > petya_moves:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    main()"
  ],
  "rewards": [
    0.7,
    0.375,
    0.3,
    0.4,
    0.7,
    0.375,
    0.55,
    0.375,
    0.725,
    1.0,
    0.675,
    0.375,
    0.7,
    0.375,
    0.625,
    0.375,
    0.0,
    0.375,
    0.675,
    0.7,
    0.0,
    0.675,
    0.375,
    0.675,
    0.7,
    0.4,
    0.7,
    0.225,
    0.3,
    0.0,
    0.675,
    0.0,
    0.0,
    0.4,
    0.425,
    0.425,
    0.7,
    0.725,
    0.7,
    0.675,
    0.775,
    0.675,
    0.775,
    0.0,
    0.4,
    0.65,
    0.25,
    0.7,
    0.6,
    0.0,
    0.675
  ],
  "train rewards": [
    0.75,
    0.425,
    0.4,
    0.375,
    0.75,
    0.425,
    0.725,
    0.425,
    0.7,
    1.0,
    0.525,
    0.425,
    0.75,
    0.425,
    0.775,
    0.425,
    0.0,
    0.425,
    0.525,
    0.75,
    0.0,
    0.525,
    0.425,
    0.525,
    0.6,
    0.475,
    0.75,
    0.4,
    0.425,
    0.0,
    0.525,
    0.0,
    0.0,
    0.475,
    0.55,
    0.5,
    0.575,
    0.775,
    0.75,
    0.525,
    0.625,
    0.525,
    0.6,
    0.0,
    0.475,
    0.5,
    0.325,
    0.75,
    0.575,
    0.0,
    0.525
  ],
  "time": [
    3.988877534866333,
    6.566015720367432,
    10.541749477386475,
    15.39949083328247,
    26.790529489517212,
    28.594566106796265,
    34.58880686759949,
    36.34676933288574,
    42.47366642951965,
    49.445406436920166,
    53.11270046234131,
    55.12512922286987,
    62.6022675037384,
    65.00474166870117,
    75.31763935089111,
    77.29472994804382,
    80.29669046401978,
    82.28222227096558,
    88.75301194190979,
    92.33460879325867,
    103.78608632087708,
    114.15748167037964,
    116.125572681427,
    121.5399420261383,
    124.4383327960968,
    126.94649314880371,
    138.05296206474304,
    142.35827779769897,
    144.59027123451233,
    150.7442398071289,
    157.3670527935028,
    163.74094152450562,
    169.49697613716125,
    172.05648708343506,
    175.07276153564453,
    177.61887335777283,
    181.70839309692383,
    185.7099175453186,
    189.22822093963623,
    191.6750738620758,
    195.7641978263855,
    198.26844811439514,
    200.84215641021729,
    206.1687662601471,
    210.30697298049927,
    212.59890127182007,
    216.4905183315277,
    222.34992718696594,
    228.41478538513184,
    241.7686653137207,
    244.12109851837158
  ],
  "sample times": 51
}