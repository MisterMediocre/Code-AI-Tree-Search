{
  "prompt": "\nQUESTION:\nA telephone number is a sequence of exactly $11$ digits such that its first digit is 8.\n\nVasya and Petya are playing a game. Initially they have a string $s$ of length $n$ ($n$ is odd) consisting of digits. Vasya makes the first move, then players alternate turns. In one move the player must choose a character and erase it from the current string. For example, if the current string 1121, after the player's move it may be 112, 111 or 121. The game ends when the length of string $s$ becomes 11. If the resulting string is a telephone number, Vasya wins, otherwise Petya wins.\n\nYou have to determine if Vasya has a winning strategy (that is, if Vasya can win the game no matter which characters Petya chooses during his moves).\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($13 \\le n < 10^5$, $n$ is odd) \u2014 the length of string $s$.\n\nThe second line contains the string $s$ ($|s| = n$) consisting only of decimal digits.\n\n\n-----Output-----\n\nIf Vasya has a strategy that guarantees him victory, print YES.\n\nOtherwise print NO.\n\n\n-----Examples-----\nInput\n13\n8380011223344\n\nOutput\nYES\n\nInput\n15\n807345619350641\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first example Vasya needs to erase the second character. Then Petya cannot erase a character from the remaining string 880011223344 so that it does not become a telephone number.\n\nIn the second example after Vasya's turn Petya can erase one character character 8. The resulting string can't be a telephone number, because there is no digit 8 at all.\n\nInstructions:\n\n\nYou are a Python3 code generator.  Output **only** valid Python code. No explanations, no commentary, no filenames, no Markdown formatting. You will spit out a code block that can be pasted into any script. It must read the input, execute the logic and then print the output. Ensure that you invoke the main() or solve() function at the end if you're writing your code inside them.\nANSWER:\n",
  "codes": [
    "def solve(n, s):\n    # Check if the initial string is a valid telephone number starting with 8\n    if len(s) != 11 or s[0] != '8':\n        return False\n    \n    # Count the occurrences of each digit in the string\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if the count of each digit meets the criteria for forming a valid telephone number\n    if digit_count[0] > 1 or digit_count[1] > 4 or digit_count[2] > 4 or digit_count[3] > 4 or digit_count[4] > 4 or digit_count[5] > 4 or digit_count[6] > 4 or digit_count[7] > 4 or digit_count[8] > 1 or digit_count[9] > 4:\n        return False\n    \n    # If all conditions are met, Vasya has a winning strategy\n    return True\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nif solve(n, s):\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "def solve(n, s):\n    if n == 11 and s[0] == '8':\n        return \"YES\"\n    else:\n        return \"NO\"\n\nif True:\n    n = int(input())\n    s = input()\n    print(solve(n, s))",
    "def solve(n, s):\n    # Check if the first character is '8'\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Count the occurrences of '8' in the string\n    count_8 = s.count('8')\n    \n    # If there are more than 1 '8', Vasya can always make a move to remove all '8's except for one\n    if count_8 > 1:\n        return \"YES\"\n    \n    # If there is exactly one '8', Vasya can make a move to remove it\n    return \"YES\" if count_8 == 1 else \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Count the occurrences of each digit\n    count = [0] * 10\n    for char in s:\n        count[int(char)] += 1\n    \n    # Check if the count of each digit meets the conditions for forming a telephone number\n    if count[0] == 0 or count[1] > 1 or count[2] > 1 or count[3] > 1 or count[4] > 1 or count[5] > 1 or count[6] > 1 or count[7] > 1 or count[8] > 1 or count[9] > 1:\n        return \"NO\"\n    \n    return \"YES\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\nprint(result)",
    "def solve(n, s):\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Check if the string can be transformed into a telephone number by erasing characters\n    for i in range(1, n):\n        if s[i] == '8':\n            # Erase the character and check if the remaining string can be a telephone number\n            if s[:i-1] + s[i+1:] == ''.join(sorted(s[:i-1] + s[i+1:])):\n                return \"YES\"\n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nprint(solve(n, s))",
    "def solve(n, s):\n    if len(s) != n:\n        return \"NO\"\n    \n    for i in range(1, n+1):\n        if s[i-1] == '8':\n            return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    # Convert the string to a list for easier manipulation\n    s_list = list(s)\n    \n    # Check if the first digit is 8\n    if s_list[0] != '8':\n        return \"NO\"\n    \n    # Initialize variables to keep track of the count of each digit\n    digit_count = [0] * 10\n    \n    # Count the occurrences of each digit in the string\n    for digit in s_list:\n        digit_count[int(digit)] += 1\n    \n    # Check if the first digit appears more than once\n    if digit_count[0] > 1:\n        return \"NO\"\n    \n    # Check if there is at least one digit that appears exactly twice\n    if sum(1 for count in digit_count if count == 2) >= 1:\n        return \"YES\"\n    \n    # If none of the above conditions are met, Vasya loses\n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    if n == 11:\n        return \"YES\"\n    \n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Check if the string can be made into a telephone number by removing one digit\n    for i in range(1, n):\n        if len(set(s[:i]) | set(s[i+1:])) == 10:\n            return \"YES\"\n    \n    return \"NO\"\n\nif True:\n    n = int(input())\n    s = input()\n    print(solve(n, s))",
    "def solve(n, s):\n    # Convert the string to a list for easier manipulation\n    s_list = list(s)\n    \n    # Function to check if a string is a valid telephone number\n    def is_valid_telephone_number(s):\n        return len(s) == 11 and s[0] == '8'\n    \n    # Check if the initial string is already a valid telephone number\n    if is_valid_telephone_number(''.join(s_list)):\n        return \"YES\"\n    \n    # Try to remove each character in the string\n    for i in range(n):\n        # Remove the character at index i\n        s_list.pop(i)\n        \n        # Check if the resulting string is a valid telephone number\n        if is_valid_telephone_number(''.join(s_list)):\n            return \"YES\"\n        \n        # Add the removed character back to the string\n        s_list.insert(i, s[i])\n    \n    # If none of the strings are valid telephone numbers, Petya wins\n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Check if the first digit is 8\n    if s[0] != '8':\n        print(\"NO\")\n        return\n    \n    # Check if the string can be transformed into a telephone number\n    for i in range(n):\n        if s[i] == '8':\n            continue\n        \n        # Remove the digit and check if the resulting string is a telephone number\n        new_s = s[:i] + s[i+1:]\n        if len(new_s) == 11:\n            if new_s[0] == '8' and all(digit in '0123456789' for digit in new_s[1:]):\n                print(\"YES\")\n                return\n    \n    print(\"NO\")\n\nif True:\n    solve()",
    "def solve():\n    n = int(input())\n    s = input()\n    # Vasya always starts by erasing the second character\n    if s[1] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif True:\n    solve()",
    "def solve(n, s):\n    # Check if the first character is '8'\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Check if the last character is '1' and the rest are even\n    if s[-1] == '1' and all(int(d) % 2 == 0 for d in s[:-1]):\n        return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    # Check if the string already forms a telephone number with the first digit as 8\n    if len(s) == 11 and s[0] == '8':\n        return \"YES\"\n    \n    # Try to remove each digit in the string to see if we can form a telephone number\n    for i in range(n):\n        new_s = s[:i] + s[i+1:]\n        if len(new_s) == 11 and new_s[0] == '8':\n            return \"YES\"\n    \n    return \"NO\"\n\nif True:\n    solve()",
    "def solve(n, s):\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Check if the last digit is not 8\n    if s[-1] == '8':\n        return \"NO\"\n    \n    # Check if the string is a telephone number\n    for i in range(1, 10):\n        if str(i) * 11 in s:\n            return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nprint(solve(n, s))",
    "def solve(n, s):\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Count the occurrences of each digit in the string\n    count = [0] * 10\n    for c in s:\n        count[int(c)] += 1\n    \n    # Check if the count of each digit is even except for the first digit\n    if count[8] % 2 != 0:\n        return \"NO\"\n    \n    # Check if the sum of counts of digits other than 8 is even\n    if sum(count[i] for i in range(1, 10)) % 2 == 0:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nprint(solve(n, s))",
    "def solve(n, s):\n    # Check if the first character is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Count the occurrences of each digit\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if there are enough digits for each position\n    if digit_count[8] >= 1 and digit_count[0] >= 1 and digit_count[1] >= 1 and digit_count[2] >= 1 and digit_count[3] >= 1 and digit_count[4] >= 1 and digit_count[5] >= 1 and digit_count[6] >= 1 and digit_count[7] >= 1 and digit_count[9] >= 1:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\nprint(result)",
    "def solve(n, s):\n    if len(s) != n:\n        return \"NO\"\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Count the occurrences of each digit\n    count = [0] * 10\n    for char in s:\n        count[int(char)] += 1\n    \n    # Check if there are enough digits for a valid telephone number\n    if count[8] < 1 or count[0] < 1 or count[1] < 1 or count[2] < 1 or count[3] < 1 or count[4] < 1 or count[5] < 1 or count[6] < 1 or count[7] < 1:\n        return \"NO\"\n    \n    # Check if the remaining string can form a valid telephone number\n    remaining = s[1:]\n    if remaining.count('8') < 1 or remaining.count('0') < 1 or remaining.count('1') < 1 or remaining.count('2') < 1 or remaining.count('3') < 1 or remaining.count('4') < 1 or remaining.count('5') < 1 or remaining.count('6') < 1 or remaining.count('7') < 1:\n        return \"NO\"\n    \n    return \"YES\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    if len(s) != n or n % 2 == 0:\n        return \"NO\"\n    \n    # Count occurrences of '8' in the string\n    count_8 = s.count('8')\n    \n    # Check if the count of '8' is even or odd\n    if count_8 % 2 == 0:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    if n != 11:\n        return \"NO\"\n    \n    # Check if the string starts with '8'\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Check if the string is a valid telephone number\n    for i in range(1, 11):\n        if s[i] == '8' and s[i+1] != '8':\n            return \"NO\"\n    \n    return \"YES\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\nprint(result)",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    # Check if the first digit is 8\n    if s[0] != '8':\n        print(\"NO\")\n        return\n    \n    # Check if the resulting string is a telephone number\n    for i in range(n):\n        new_s = s[:i] + s[i+1:]\n        if len(new_s) == 11 and '8' in new_s:\n            print(\"YES\")\n            return\n    \n    print(\"NO\")\n\nif True:\n    solve()",
    "def solve(n, s):\n    # Check if the initial string is a telephone number\n    if s[0] != '8':\n        return False\n    \n    # Count the occurrences of each digit in the string\n    digit_count = [0] * 10\n    for digit in s:\n        digit_count[int(digit)] += 1\n    \n    # Check if there are enough digits for each digit in the telephone number\n    if digit_count[0] > 1 and digit_count[8] == 1:\n        return True\n    elif digit_count[0] > 1 and digit_count[8] > 1:\n        return True\n    else:\n        return False\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(\"YES\" if result else \"NO\")",
    "def solve(n, s):\n    # Check if the initial string is already a telephone number\n    if s[:1] == '8':\n        return \"YES\"\n    \n    # Try to erase each character and check if the resulting string is a telephone number\n    for i in range(1, n+1):\n        new_s = s[:i-1] + s[i:]\n        if new_s[0] == '8' and len(new_s) == 11:\n            return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\nprint(result)",
    "def solve(n, s):\n    if len(s) != n:\n        return \"NO\"\n    \n    # Check if the first character is '8'\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Check if the last character is '1' or '4' (since these are the only possible last characters for a valid telephone number)\n    if s[-1] != '1' and s[-1] != '4':\n        return \"NO\"\n    \n    # Check if the string can be transformed into a valid telephone number by removing characters\n    for i in range(n):\n        if s[i] == '8':\n            continue\n        for j in range(i + 1, n):\n            if s[j] == '1' or s[j] == '4':\n                s = s[:i] + s[i+1:j] + s[j+1:]\n                break\n    \n    # Check if the resulting string is a valid telephone number\n    if len(s) != 11:\n        return \"NO\"\n    \n    # Check if the resulting string contains exactly one '8' and one '1' or '4'\n    count_8 = s.count('8')\n    count_1_or_4 = s.count('1') + s.count('4')\n    if count_8 != 1 or count_1_or_4 != 1:\n        return \"NO\"\n    \n    return \"YES\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nprint(solve(n, s))",
    "def solve(n, s):\n    # Check if the first character is '8'\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Count the occurrences of each digit\n    count = [0] * 10\n    for char in s:\n        count[int(char)] += 1\n    \n    # Check if the count of each digit is even\n    for i in range(10):\n        if count[i] % 2 != 0:\n            return \"NO\"\n    \n    return \"YES\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "```python\ndef solve(n, s):\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Count the occurrences of each digit in the string\n    count = [0] * 10\n    for char in s:\n        count[int(char)] += 1\n    \n    # Check if there are enough digits to form a telephone number\n    if count[0] > 1 or count[1] > 4 or count[2] > 4 or count[3] > 4 or count[4] > 4 or count[5] > 4 or count[6] > 4 or count[7] > 4 or count[8] > 1 or count[9] > 4:\n        return \"NO\"\n    \n    # Check if the last digit is 8\n    if s[-1] != '8':\n        return \"NO\"\n    \n    # Check if the string can be transformed into a telephone number\n    for i in range(1, n-1):\n        if s[i] == '8' and count[s[i]] == 0:\n            continue\n        \n        if s[i] != '8' and count[s[i]] == 0:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i+1]] == 0:\n            continue\n        \n        if s[i] != '8' and count[s[i+1]] == 0:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i-1]] == 0:\n            continue\n        \n        if s[i] != '8' and count[s[i-1]] == 0:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i]] > 1:\n            continue\n        \n        if s[i] != '8' and count[s[i]] > 1:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i+1]] > 1:\n            continue\n        \n        if s[i] != '8' and count[s[i+1]] > 1:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i-1]] > 1:\n            continue\n        \n        if s[i] != '8' and count[s[i-1]] > 1:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i]] > 4:\n            continue\n        \n        if s[i] != '8' and count[s[i]] > 4:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i+1]] > 4:\n            continue\n        \n        if s[i] != '8' and count[s[i+1]] > 4:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i-1]] > 4:\n            continue\n        \n        if s[i] != '8' and count[s[i-1]] > 4:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i]] > 8:\n            continue\n        \n        if s[i] != '8' and count[s[i]] > 8:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i+1]] > 8:\n            continue\n        \n        if s[i] != '8' and count[s[i+1]] > 8:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i-1]] > 8:\n            continue\n        \n        if s[i] != '8' and count[s[i-1]] > 8:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i]] > 16:\n            continue\n        \n        if s[i] != '8' and count[s[i]] > 16:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i+1]] > 16:\n            continue\n        \n        if s[i] != '8' and count[s[i+1]] > 16:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i-1]] > 16:\n            continue\n        \n        if s[i] != '8' and count[s[i-1]] > 16:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i]] > 32:\n            continue\n        \n        if s[i] != '8' and count[s[i]] > 32:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i+1]] > 32:\n            continue\n        \n        if s[i] != '8' and count[s[i+1]] > 32:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i-1]] > 32:\n            continue\n        \n        if s[i] != '8' and count[s[i-1]] > 32:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i]] > 64:\n            continue\n        \n        if s[i] != '8' and count[s[i]] > 64:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i+1]] > 64:\n            continue\n        \n        if s[i] != '8' and count[s[i+1]] > 64:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i-1]] > 64:\n            continue\n        \n        if s[i] != '8' and count[s[i-1]] > 64:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i]] > 128:\n            continue\n        \n        if s[i] != '8' and count[s[i]] > 128:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i+1]] > 128:\n            continue\n        \n        if s[i] != '8' and count[s[i+1]] > 128:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i-1]] > 128:\n            continue\n        \n        if s[i] != '8' and count[s[i-1]] > 128:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i]] > 256:\n            continue\n        \n        if s[i] != '8' and count[s[i]] > 256:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i+1]] > 256:\n            continue\n        \n        if s[i] != '8' and count[s[i+1]] > 256:\n            return \"NO\"\n        \n        if s[i] == '8' and count[s[i-1]] > 256:\n            continue\n        \n        if",
    "def solve(n, s):\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Check if the string can form a valid telephone number\n    for i in range(1, n+1):\n        if len(s) == i and s[i-1] != '8' and '8' not in s[i:]:\n            return \"NO\"\n    \n    return \"YES\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nprint(solve(n, s))",
    "def solve(n, s):\n    if n != 11:\n        return \"NO\"\n    \n    for i in range(11):\n        if s[i] == '8':\n            return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nprint(solve(n, s))",
    "def solve(n, s):\n    # Check if the first character is 8\n    if s[0] != '8':\n        return False\n    \n    # Count the occurrences of each digit\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if there is at least one digit that appears more than twice\n    for count in digit_count:\n        if count > 2:\n            return True\n    \n    return False\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nif result:\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "def solve(n, s):\n    # Convert the string to a list for easier manipulation\n    s_list = list(s)\n    \n    # Check if the first digit is 8\n    if s_list[0] != '8':\n        return \"NO\"\n    \n    # Iterate through the string to find positions where the first digit is 8\n    for i in range(1, n):\n        if s_list[i] == '8':\n            # Erase the character at position i\n            del s_list[i]\n            break\n    \n    # Join the list back into a string\n    s = ''.join(s_list)\n    \n    # Check if the resulting string is a telephone number\n    if len(s) == 11 and '8' in s:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    if len(s) != n or n % 2 == 0:\n        return \"NO\"\n    \n    for i in range(n - 1, -1, -1):\n        if s[i] == '8':\n            return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    if n != 11:\n        return \"NO\"\n    \n    # Check if the string starts with 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Count the occurrences of each digit in the string\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if the string is a valid telephone number\n    if digit_count[0] == 1 and digit_count[1] >= 1 and digit_count[2] >= 1 and digit_count[3] >= 1 and digit_count[4] >= 1 and digit_count[5] >= 1 and digit_count[6] >= 1 and digit_count[7] >= 1 and digit_count[8] == 1 and digit_count[9] >= 1:\n        return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nprint(solve(n, s))",
    "def solve(n, s):\n    # Convert the string to a list for easier manipulation\n    s_list = list(s)\n    \n    # Check if the first digit is 8\n    if s_list[0] != '8':\n        return \"NO\"\n    \n    # Initialize variables to track the count of digits and positions\n    count = 0\n    pos = -1\n    \n    # Iterate through the list to find the position of the last digit\n    for i in range(n):\n        if s_list[i] == '8':\n            pos = i\n            count += 1\n    \n    # Check if the count of digits is even or odd\n    if count % 2 == 0:\n        return \"NO\"\n    else:\n        return \"YES\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    if len(s) != n:\n        return \"NO\"\n    for i in range(1, n+1):\n        if s[i-1] == '8':\n            return \"YES\"\n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Check if the string can be made into a telephone number by erasing one character\n    for i in range(n):\n        if len(s) == 11 and s[0] == '8':\n            return \"YES\"\n        if len(s) > 11 and s[0] == '8' and s[i] != '8':\n            return \"YES\"\n        \n        # Erase one character\n        s = s[:i] + s[i+1:]\n    \n    return \"NO\"\n\nif True:\n    solve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Check if the string can be transformed into a telephone number by erasing characters\n    for i in range(n):\n        if s[i] != '8':\n            # Erase the character and check if the resulting string is a telephone number\n            new_s = s[:i] + s[i+1:]\n            if len(new_s) == 11 and new_s[0] == '8' and all(digit in '0123456789' for digit in new_s[1:]):\n                return \"YES\"\n    \n    return \"NO\"\n\nif True:\n    solve()",
    "def solve(n, s):\n    # Check if the initial string is a valid telephone number\n    if len(s) != 11 or s[0] != '8':\n        return False\n    \n    # Check if the last digit is 8\n    if s[-1] == '8':\n        return True\n    \n    # Check if the string can be transformed into a valid telephone number by erasing a character\n    for i in range(n):\n        new_s = s[:i] + s[i+1:]\n        if len(new_s) != 11 or new_s[0] != '8':\n            continue\n        if new_s[-1] == '8':\n            return True\n    \n    return False\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(\"YES\" if result else \"NO\")",
    "def solve():\n    n = int(input())\n    s = input()\n    if n == 11:\n        return \"YES\"\n    if len(s) != 11:\n        return \"NO\"\n    if s[0] != '8':\n        return \"NO\"\n    if '8' not in s:\n        return \"NO\"\n    if '0' in s:\n        return \"NO\"\n    if '1' in s:\n        return \"NO\"\n    if '2' in s:\n        return \"NO\"\n    if '3' in s:\n        return \"NO\"\n    if '4' in s:\n        return \"NO\"\n    if '5' in s:\n        return \"NO\"\n    if '6' in s:\n        return \"NO\"\n    if '7' in s:\n        return \"NO\"\n    if '9' in s:\n        return \"NO\"\n    return \"YES\"\n\nif True:\n    solve()",
    "def solve(n, s):\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return False\n    \n    # Count the occurrences of each digit in the string\n    count = [0] * 10\n    for char in s:\n        count[int(char)] += 1\n    \n    # Check if the count of each digit is even\n    for i in range(10):\n        if count[i] % 2 != 0:\n            return False\n    \n    # If all checks pass, Vasya has a winning strategy\n    return True\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nif solve(n, s):\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "def solve(n, s):\n    if len(s) != n or n % 2 == 0:\n        return \"NO\"\n    \n    for i in range(n):\n        if s[i] == '8':\n            return \"YES\"\n    \n    return \"NO\"\n\nif True:\n    n = int(input())\n    s = input()\n    print(solve(n, s))",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Check if the initial string is already a valid telephone number\n    if len(s) == 11 and s[0] == '8':\n        return \"YES\"\n    \n    # Check if there exists a way to make the string a valid telephone number by erasing characters\n    for i in range(n):\n        new_s = s[:i] + s[i+1:]\n        if len(new_s) == 11 and new_s[0] == '8':\n            return \"YES\"\n    \n    return \"NO\"\n\nif True:\n    solve()",
    "def solve(n, s):\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Count the occurrences of each digit\n    count = [0] * 10\n    for c in s:\n        count[int(c)] += 1\n    \n    # Check if there is a digit other than 8 that appears more than twice\n    if any(count[i] > 2 for i in range(1, 10)):\n        return \"NO\"\n    \n    # If all conditions are met, Vasya has a winning strategy\n    return \"YES\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\nprint(result)",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    # Check if the string is already a telephone number\n    if len(s) == 11 and s[0] == '8':\n        print(\"YES\")\n        return\n    \n    # Try to remove each character to see if it forms a valid telephone number\n    for i in range(n):\n        new_s = s[:i] + s[i+1:]\n        if len(new_s) == 11 and new_s[0] == '8':\n            print(\"YES\")\n            return\n    \n    print(\"NO\")\n\nif True:\n    solve()",
    "def solve():\n    n = int(input())\n    s = input()\n    if n % 2 == 0:\n        return \"NO\"\n    else:\n        return \"YES\"\n\nif True:\n    solve()",
    "def solve(n, s):\n    if len(s) != n or s[0] != '8':\n        return \"NO\"\n    \n    # Check if the string can be transformed into a valid telephone number\n    for i in range(1, n-1):\n        if s[i] == '8' and (i == 1 or s[i-1] != '8') and (i == n-2 or s[i+1] != '8'):\n            return \"YES\"\n    \n    return \"NO\"\n\nif True:\n    n = int(input())\n    s = input()\n    print(solve(n, s))",
    "def solve(n, s):\n    # Check if the initial string is a telephone number\n    if s[0] != '8':\n        return False\n    \n    # Check if the last digit is not a 9\n    if s[-1] == '9':\n        return False\n    \n    # Check if there is at least one 8 in the middle\n    for i in range(1, n-1):\n        if s[i] == '8':\n            return True\n    \n    return False\n\nif True:\n    n = int(input())\n    s = input()\n    result = solve(n, s)\n    print(\"YES\" if result else \"NO\")",
    "def solve(n, s):\n    if len(s) != n or n % 2 == 0:\n        return \"NO\"\n    \n    for i in range(n // 2):\n        if s[i] != '8':\n            return \"YES\"\n    \n    return \"NO\"\n\nif True:\n    n = int(input())\n    s = input()\n    print(solve(n, s))",
    "def solve(n, s):\n    if n == 11 and s[0] == '8':\n        return \"YES\"\n    \n    for i in range(1, n - 1):\n        if s[i] != '8' and s[i + 1] != '8':\n            return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)",
    "def solve(n, s):\n    # Check if the first digit is 8\n    if s[0] != '8':\n        return False\n    \n    # Count the occurrences of each digit in the string\n    digit_count = [0] * 10\n    for char in s:\n        digit_count[int(char)] += 1\n    \n    # Check if there are enough occurrences of each digit to form a telephone number\n    for count in digit_count:\n        if count % 3 != 0 and count != 1:\n            return False\n    \n    return True\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(\"YES\" if result else \"NO\")",
    "def solve(n, s):\n    # Check if the first character is 8\n    if s[0] != '8':\n        return \"NO\"\n    \n    # Count the occurrences of each digit in the string\n    digit_count = {}\n    for char in s:\n        if char in digit_count:\n            digit_count[char] += 1\n        else:\n            digit_count[char] = 1\n    \n    # Check if the string can form a valid telephone number\n    if len(digit_count) > 10 or sum(digit_count.values()) < 11:\n        return \"NO\"\n    \n    # Check if there is at least one digit that appears more than twice\n    if max(digit_count.values()) > 2:\n        return \"NO\"\n    \n    # Check if the string can form a valid telephone number with the first digit as 8\n    if digit_count['8'] > 1 and sum(digit_count.values()) == 11:\n        return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\nprint(result)",
    "def solve(n, s):\n    if n != 11:\n        return \"NO\"\n    \n    for i in range(11):\n        if s[i] == '8':\n            return \"YES\"\n    \n    return \"NO\"\n\n# Read input\nn = int(input())\ns = input()\n\n# Solve the problem\nresult = solve(n, s)\n\n# Print the result\nprint(result)"
  ],
  "rewards": [
    0.675,
    0.675,
    0.7,
    0.675,
    0.7,
    0.4,
    0.7,
    0.65,
    0.675,
    0.675,
    0.65,
    0.675,
    0.0,
    0.65,
    0.675,
    0.65,
    0.675,
    0.35,
    0.675,
    0.675,
    0.625,
    0.7,
    0.675,
    0.675,
    0.0,
    0.65,
    0.675,
    0.7,
    0.675,
    0.4,
    0.675,
    0.675,
    0.4,
    0.0,
    0.0,
    0.675,
    0.0,
    0.675,
    0.4,
    0.0,
    0.675,
    0.675,
    0.0,
    0.725,
    0.7,
    0.3,
    0.275,
    0.675,
    0.675,
    0.675
  ],
  "train rewards": [
    0.525,
    0.525,
    0.75,
    0.5,
    0.6,
    0.475,
    0.6,
    0.525,
    0.525,
    0.525,
    0.625,
    0.525,
    0.0,
    0.525,
    0.525,
    0.525,
    0.525,
    0.55,
    0.525,
    0.525,
    0.55,
    0.75,
    0.475,
    0.525,
    0.0,
    0.625,
    0.525,
    0.775,
    0.525,
    0.475,
    0.525,
    0.65,
    0.475,
    0.0,
    0.0,
    0.525,
    0.0,
    0.525,
    0.475,
    0.0,
    0.475,
    0.525,
    0.0,
    0.725,
    0.725,
    0.4,
    0.375,
    0.6,
    0.525,
    0.525
  ],
  "time": 277.8974621295929,
  "sample times": 50
}