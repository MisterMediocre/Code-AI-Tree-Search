{
  "prompt": "\nQUESTION:\nA telephone number is a sequence of exactly $11$ digits such that its first digit is 8.\n\nVasya and Petya are playing a game. Initially they have a string $s$ of length $n$ ($n$ is odd) consisting of digits. Vasya makes the first move, then players alternate turns. In one move the player must choose a character and erase it from the current string. For example, if the current string 1121, after the player's move it may be 112, 111 or 121. The game ends when the length of string $s$ becomes 11. If the resulting string is a telephone number, Vasya wins, otherwise Petya wins.\n\nYou have to determine if Vasya has a winning strategy (that is, if Vasya can win the game no matter which characters Petya chooses during his moves).\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($13 \\le n < 10^5$, $n$ is odd) \u2014 the length of string $s$.\n\nThe second line contains the string $s$ ($|s| = n$) consisting only of decimal digits.\n\n\n-----Output-----\n\nIf Vasya has a strategy that guarantees him victory, print YES.\n\nOtherwise print NO.\n\n\n-----Examples-----\nInput\n13\n8380011223344\n\nOutput\nYES\n\nInput\n15\n807345619350641\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first example Vasya needs to erase the second character. Then Petya cannot erase a character from the remaining string 880011223344 so that it does not become a telephone number.\n\nIn the second example after Vasya's turn Petya can erase one character character 8. The resulting string can't be a telephone number, because there is no digit 8 at all.\n\nTUTORIAL:\nLet's understand how players should act.\n\nVasya needs to delete the first digit that is not equal to 8, because the first digit of telephone number should be 8, and the first digit not equal to 8 is preventing it.\n\nPetya needs to delete the first digit equal to 8, for the same reasons.\n\nSo, all that we need to do is delete first \u230a(n - 11) / 2\u230b digits not equal to 8 (if they exist), and first \u230a(n - 11) / 2\u230b digits equal to 8 (again if they exist). It's enough to stop when there is either no 8's left or no non-8's because the latter moves won't change the result of the game anyway. Finally, if first digit of resulting string is 8, then Vasya wins, otherwise Petya.\n\nOverall complexity: O(n).\n\n\nInstructions:\n\n\nYou are a Python3 code generator.  Output **only** valid Python code. No explanations, no commentary, no filenames, no Markdown formatting. You will spit out a code block that can be pasted into any script. It must read the input, execute the logic and then print the output. Ensure that you invoke the main() or solve() function at the end if you're writing your code inside them.\nANSWER:\n",
  "codes": [
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    count_8 = s.count('8')\n    count_not_8 = n - count_8\n    \n    if count_8 == 0 or count_not_8 == 0:\n        print(\"NO\")\n        return\n    \n    if count_8 % 2 == 0:\n        count_to_delete = count_8 // 2\n    else:\n        count_to_delete = count_8 // 2 + 1\n    \n    if count_to_delete > count_not_8:\n        print(\"NO\")\n        return\n    \n    print(\"YES\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Find the index of the first non-8 digit\n    i = 0\n    while i < n and s[i] != '8':\n        i += 1\n    \n    # If there are no non-8 digits, return \"NO\"\n    if i == n:\n        print(\"NO\")\n        return\n    \n    # Find the index of the first 8 digit\n    j = 0\n    while j < n and s[j] != '8':\n        j += 1\n    \n    # Calculate the number of moves needed\n    moves = min(i // 2, (n - i - j) // 2)\n    \n    # Print \"YES\" if moves are even, otherwise \"NO\"\n    if moves % 2 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    count_8 = s.count('8')\n    count_not_8 = s.count('9')\n    \n    if count_8 == 0 or count_not_8 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Calculate the number of non-8's to delete\n    non_8_to_delete = min(count_8, (n - 11) // 2)\n    \n    # Remove the non-8's\n    s = s[:non_8_to_delete] + s[non_8_to_delete + 1:]\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Main function\nif True:\n    solve()",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    count_not_8 = len(s) - count_8\n    \n    if count_8 > 0 and count_not_8 > 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    n = data[0]\n    s = data[1:]\n    \n    count_8 = s.count(8)\n    count_not_8 = len(s) - count_8\n    \n    if count_8 == 0:\n        print(\"NO\")\n        return\n    \n    if count_not_8 == 0:\n        print(\"YES\")\n        return\n    \n    if count_8 % 2 != count_not_8 % 2:\n        print(\"NO\")\n        return\n    \n    print(\"YES\")\n\nsolve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    n = data[0]\n    s = data[1]\n    \n    def check(s):\n        return len(s) == 11 and s[0] == '8'\n    \n    count_8 = s.count('8')\n    count_non_8 = s.count('9') + s.count('0')\n    \n    if count_8 > count_non_8:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    n = data[0]\n    s = data[1:]\n    \n    count_8 = s.count(8)\n    count_not_8 = len(s) - count_8\n    \n    if count_8 > count_not_8:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    count_not_8 = len(s) - count_8\n    \n    if count_8 == 0 or count_not_8 == 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    if count_8 == 0 or count_8 % 2 != 0:\n        print(\"NO\")\n    else:\n        vasya_moves = min(count_8 // 2, n // 2)\n        petya_moves = n // 2 - vasya_moves\n        if s[0] == '8':\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    \n    if count_8 == 0:\n        print(\"NO\")\n        return\n    \n    vasya_turn = True\n    for i in range(n):\n        if vasya_turn:\n            if s[i] != '8':\n                s = s[:i] + s[i+1:]\n                vasya_turn = False\n        else:\n            if s[i] == '8':\n                s = s[:i] + s[i+1:]\n                vasya_turn = True\n                \n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Count occurrences of '8' and other digits\n    count_8 = s.count('8')\n    count_other = len(s) - count_8\n    \n    # Determine the number of digits to remove\n    num_to_remove = min(count_8 // 2, count_other // 2)\n    \n    # Construct the new string by removing the required digits\n    new_string = ''\n    for i in range(n):\n        if i >= num_to_remove:\n            new_string += s[i]\n    \n    # Check if the resulting string is a valid telephone number\n    if new_string[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Call the solve function to run the program\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Count the number of 8's and other digits\n    count_8 = s.count('8')\n    count_other = len(s) - count_8\n    \n    # Calculate the number of moves needed\n    moves_needed = min(count_8 // 2, count_other // 2)\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8' and count_8 % 2 == 0 and count_other % 2 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Count the number of 8's and other digits\n    count_8 = sum(1 for char in s if char == '8')\n    count_other = len(s) - count_8\n    \n    # Calculate the minimum number of moves required\n    min_moves = (count_8 + count_other) // 2\n    \n    # Check if Vasya has a winning strategy\n    if min_moves % 2 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Main function to run the solution\nif True:\n    solve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    n = data[0]\n    s = data[1:]\n    \n    count_8 = sum(1 for c in s if c == 8)\n    count_not_8 = len(s) - count_8\n    \n    if count_8 > 0 and count_not_8 > 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Calculate the number of digits to remove\n    num_to_remove = min(count_8, (n - 11) // 2)\n    \n    # Remove the first 'num_to_remove' digits that are not equal to 8\n    for i in range(num_to_remove):\n        if s[i] != '8':\n            s = s[:i] + s[i+1:]\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Main function to run the program\ndef main():\n    solve()\n\n# Call the main function\nif True:\n    main()",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    count_not_8 = n - count_8\n    \n    if count_8 > 0 and count_not_8 > 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Count occurrences of '8' in the string\n    count_8 = s.count('8')\n    \n    # Calculate the number of digits to remove\n    num_to_remove = (n - 11) // 2\n    \n    # Remove '8' characters if available\n    if count_8 >= num_to_remove:\n        s = s.replace('8', '', num_to_remove)\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Main function to run the solution\ndef main():\n    solve()\n\n# Call the main function\nif True:\n    main()",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    count_not_8 = s.count('9') + s.count('0') + s.count('1') + s.count('2') + s.count('3') + s.count('4') + s.count('5') + s.count('6') + s.count('7')\n    \n    if count_8 == 0 or count_not_8 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    count_8 = s.count('8')\n    count_non_8 = len(s) - count_8\n    \n    if count_8 == 0 or count_non_8 == 0:\n        print(\"NO\")\n        return\n    \n    vasya_moves = count_8 // 2\n    petya_moves = count_non_8 // 2\n    \n    if vasya_moves + petya_moves >= n - 11:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    n = data[0]\n    s = data[1:]\n    \n    def is_valid(s):\n        return len(s) == 11 and s[0] == '8'\n    \n    def get_first_non_8(s):\n        for i in range(len(s)):\n            if s[i] != '8':\n                return i\n        return -1\n    \n    def get_first_8(s):\n        for i in range(len(s)):\n            if s[i] == '8':\n                return i\n        return -1\n    \n    def play_game(s):\n        while len(s) > 11:\n            non_8_index = get_first_non_8(s)\n            if non_8_index != -1:\n                s = s[:non_8_index] + s[non_8_index+1:]\n            else:\n                break\n        \n        if len(s) == 11 and is_valid(s):\n            return \"YES\"\n        else:\n            return \"NO\"\n    \n    print(play_game(s))\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    count_not_8 = len(s) - count_8\n    if count_8 == 0 or count_not_8 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Count the number of 8's and non-8's in the string\n    count_8 = s.count('8')\n    count_non_8 = s.count('9') + s.count('0') + s.count('1') + s.count('2') + s.count('3') + s.count('4') + s.count('5') + s.count('6') + s.count('7')\n    \n    # Determine if Vasya can win\n    if count_8 > 0 and count_non_8 > 0:\n        # Delete first \u230a(n - 11) / 2\u230b digits not equal to 8\n        if count_8 > n // 2:\n            count_8 -= n // 2\n        \n        # Delete first \u230a(n - 11) / 2\u230b digits equal to 8\n        if count_non_8 > n // 2:\n            count_non_8 -= n // 2\n    \n    # Check if the resulting string is a telephone number\n    if count_8 == 1 and count_non_8 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Call the solve function to start the game\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Find the index of the first occurrence of '8'\n    idx = s.find('8')\n    if idx == -1:\n        print(\"NO\")\n        return\n    \n    # Calculate the number of characters to remove\n    remove_count = (n - 11) // 2\n    \n    # Remove the required characters\n    s = s[:idx] + s[idx + remove_count:]\n    \n    # Check if the resulting string is a telephone number\n    if s[0] != '8':\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\n# Main function\nif True:\n    solve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    count_8 = s.count('8')\n    count_not_8 = len(s) - count_8\n    \n    if count_8 == 0 or count_not_8 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Calculate the minimum number of moves needed\n    min_moves = min(count_8 // 2, (n - count_8) // 2)\n    \n    # Check if the resulting string is a telephone number\n    if s[:min_moves] == '8' * min_moves:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Find the index of the first non-8 digit\n    first_non_8_index = s.find('8')\n    if first_non_8_index == -1:\n        first_non_8_index = n\n    \n    # Find the index of the last non-8 digit\n    last_non_8_index = s.rfind('8')\n    if last_non_8_index == -1:\n        last_non_8_index = n\n    \n    # Calculate the number of moves needed\n    moves_needed = min(first_non_8_index // 2, last_non_8_index // 2)\n    \n    # Check if the resulting string is a telephone number\n    if s[:moves_needed] == '8' * moves_needed:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    count = [0] * 10\n    for i in range(n):\n        count[int(s[i])] += 1\n    if count[8] == 0:\n        print(\"NO\")\n        return\n    vasya_count = count[8] // 2\n    petya_count = count[8] // 2\n    for i in range(n - 11):\n        if count[s[i]] > 0:\n            if count[s[i]] % 2 == 0:\n                vasya_count -= 1\n            else:\n                petya_count -= 1\n            count[s[i]] -= 1\n    if count[8] == 0:\n        print(\"NO\")\n        return\n    if count[8] % 2 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "```python\ndef solve():\n    n = int(input())\n    s = input()\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Calculate the number of non-8's\n    count_non_8 = len(s) - count_8\n    \n    # If there are no 8's, Petya wins\n    if count_8 == 0:\n        print(\"NO\")\n        return\n    \n    # If there are no non-8's, Vasya wins\n    if count_non_8 == 0:\n        print(\"YES\")\n        return\n    \n    # If there are both 8's and non-8's, Vasya wins\n    if count_8 > 0 and count_non_8 > 0:\n        print(\"YES\")\n        return\n    \n    # If there are only 8's or only non-8's, Petya wins\n    if count_8 == n or count_non_8 == n:\n        print(\"NO\")\n        return\n    \n    # If there are both 8's and non-8's, Vasya wins\n    if count_8 > 0 and count_non_8 > 0:\n        print(\"YES\")\n        return\n    \n    # If there are only 8's or only non-8's, Petya wins\n    if count_8 == n or count_non_8 == n:\n        print(\"NO\")\n        return\n    \n    # If there are both 8's and non-8's, Vasya wins\n    if count_8 > 0 and count_non_8 > 0:\n        print(\"YES\")\n        return\n    \n    # If there are only 8's or only non-8's, Petya wins\n    if count_8 == n or count_non_8 == n:\n        print(\"NO\")\n        return\n    \n    # If there are both 8's and non-8's, Vasya wins\n    if count_8 > 0 and count_non_8 > 0:\n        print(\"YES\")\n        return\n    \n    # If there are only 8's or only non-8's, Petya wins\n    if count_8 == n or count_non_8 == n:\n        print(\"NO\")\n        return\n    \n    # If there are both 8's and non-8's, Vasya wins\n    if count_8 > 0 and count_non_8 > 0:\n        print(\"YES\")\n        return\n    \n    # If there are only 8's or only non-8's, Petya wins\n    if count_8 == n or count_non_8 == n:\n        print(\"NO\")\n        return\n    \n    # If there are both 8's and non-8's, Vasya wins\n    if count_8 > 0 and count_non_8 > 0:\n        print(\"YES\")\n        return\n    \n    # If there are only 8's or only non-8's, Petya wins\n    if count_8 == n or count_non_8 == n:\n        print(\"NO\")\n        return\n    \n    # If there are both 8's and non-8's, Vasya wins\n    if count_8 > 0 and count_non_8 > 0:\n        print(\"YES\")\n        return\n    \n    # If there are only 8's or only non-8's, Petya wins\n    if count_8 == n or count_non_8 == n:\n        print(\"NO\")\n        return\n    \n    # If there are both 8's and non-8's, Vasya wins\n    if count_8 > 0 and count_non_8 > 0:\n        print(\"YES\")\n        return\n    \n    # If there are only 8's or only non-8's, Petya wins\n    if count_8 == n or count_non_8 == n:\n        print(\"NO\")\n        return\n    \n    # If there are both 8's and non-8's, Vasya wins\n    if count_8 > 0 and count_non_8 > 0:\n        print(\"YES\")\n        return\n    \n    # If there are only 8's or only non-8's, Petya wins\n    if count_8 == n or count_non_8 == n:\n        print(\"NO\")\n        return\n    \n    # If there are both 8's and non-8's, Vasya wins\n    if count_8 > 0 and count_non_8 > 0:\n        print(\"YES\")\n        return\n    \n    # If there are only 8's or only non-8's, Petya wins\n    if count_8 == n or count_non_8 == n:\n        print(\"NO\")\n        return\n    \n    # If there are both 8's and non-8's, Vasya wins\n    if count_8 > 0 and count_non_8 > 0:\n        print(\"YES\")\n        return\n    \n    # If there are only 8's or only non-8's, Petya wins\n    if count_8 == n or count_non_8 == n:\n        print(\"NO\")\n        return\n    \n    # If there are both 8's and non-8's, Vasya wins\n    if count_8 > 0 and count_non_8 > 0:\n        print(\"YES\")\n        return\n    \n    # If there are only 8's or only non-8's, Petya wins\n    if count_8 == n or count_non_8 == n:\n        print(\"NO\")\n        return\n    \n    # If there are both 8's and non-8's, Vasya wins\n    if count_8 > 0 and count_non_8 > 0:\n        print(\"YES\")\n        return\n    \n    # If there are only 8's or only non-8's, Petya wins\n    if count_8 == n or count_non_8 == n:\n        print(\"NO\")\n        return\n    \n    # If there are both 8's and non-8's, Vasya wins\n    if count_8 > 0 and count_non_8 > 0:\n        print(\"YES\")",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    count_not_8 = len(s) - count_8\n    \n    if count_8 == 0 or count_not_8 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    def count_digits(s, digit):\n        return sum(1 for char in s if char == digit)\n    \n    vasya_turn = True\n    while len(s) > 11:\n        if vasya_turn:\n            # Delete the first non-8 digit\n            while count_digits(s, '8') > 0:\n                s = s[1:]\n        else:\n            # Delete the first 8 digit\n            while count_digits(s, '8') == 0:\n                s = s[1:]\n        \n        vasya_turn = not vasya_turn\n    \n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    \n    # Vasya's move\n    vasya_moves = count_8 // 2\n    \n    # Petya's move\n    petya_moves = count_8 // 2\n    \n    # Check if Vasya's move results in a telephone number\n    if s[:vasya_moves] + s[vasyha_moves+1:] == '8' * (n - vasya_moves):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Determine the number of digits to remove\n    remove_count = (n - 11) // 2\n    \n    # Remove the first count_8 digits not equal to 8\n    if count_8 > remove_count:\n        s = s[count_8:]\n    \n    # Remove the first remove_count digits equal to 8\n    s = s[:remove_count]\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Call the solve function to run the game\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    \n    # Calculate the minimum number of moves required to make the string a telephone number\n    min_moves = (n - 11) // 2\n    \n    # Check if the number of 8's is less than the minimum number of moves\n    if count_8 < min_moves:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Determine the number of characters to delete\n    delete_count = min(count_8, (n - 11) // 2)\n    \n    # Delete the specified number of characters\n    s = s[:delete_count] + s[delete_count + 1:]\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    count_8 = s.count('8')\n    count_not_8 = s.count('9') + s.count('0') + s.count('1') + s.count('2') + s.count('3') + s.count('4') + s.count('5') + s.count('6')\n    \n    if count_8 == 0 or count_not_8 == 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Determine the number of characters to delete\n    delete_count = min(count_8, (n - 11) // 2)\n    \n    # Construct the new string by removing the specified characters\n    new_s = s[:delete_count] + s[delete_count + 1:]\n    \n    # Check if the resulting string is a telephone number\n    if len(new_s) == 11 and new_s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Call the solve function\nsolve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Calculate the number of moves needed\n    moves_needed = min(count_8, (n - 11) // 2)\n    \n    # Check if Vasya has a winning strategy\n    if count_8 > (n - 11) // 2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Find the first occurrence of '8'\n    index = s.find('8')\n    \n    # Calculate the number of '8's to remove\n    num_eights_to_remove = min((n - 11) // 2, index)\n    \n    # Remove the '8's from the beginning of the string\n    s = s[num_eights_to_remove:]\n    \n    # Check if the resulting string is a telephone number\n    if len(s) == 11 and s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Main function\nif True:\n    solve()",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    \n    # Calculate the minimum number of moves required\n    min_moves = min(count_8, (n - 11) // 2)\n    \n    # Check if Vasya can win\n    if min_moves == count_8:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Main function\nif True:\n    solve()",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    \n    if count_8 == 0:\n        print(\"NO\")\n        return\n    \n    if n % 2 != 0:\n        count_not_8 = s.count('8') - (n - 11) // 2\n        if count_not_8 > 0:\n            print(\"NO\")\n            return\n        \n    count_8 = s.count('8') - (n - 11) // 2\n    if count_8 > 0:\n        print(\"NO\")\n        return\n    \n    print(\"YES\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    \n    # Calculate the number of digits to remove\n    if count_8 > 0:\n        count_to_remove = min(count_8 // 2, (n - 11) // 2)\n    else:\n        count_to_remove = 0\n    \n    # Remove the required digits\n    s = s[:count_to_remove] + s[count_to_remove+1:]\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Call the solve function to start the game\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = sum(1 for char in s if char == '8')\n    if count_8 >= 6:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    count_8 = s.count('8')\n    count_non_8 = n - count_8\n    vasya_moves = min(count_8, count_non_8 // 2)\n    petya_moves = min(count_non_8, count_8 // 2)\n    \n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    n = data[0]\n    s = data[1:]\n    \n    # Count occurrences of '8'\n    count_8 = s.count(8)\n    \n    # Determine the number of characters to delete\n    if count_8 > 0:\n        # Delete first half of '8's\n        if count_8 % 2 == 0:\n            del s[:count_8 // 2]\n        else:\n            del s[:count_8 // 2 + 1]\n    \n    # Check if the resulting string is a telephone number\n    if len(s) != 11:\n        print(\"NO\")\n    elif s[0] != 8:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\n# Call the solve function\nsolve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    n = data[0]\n    s = data[1]\n    \n    # Count occurrences of 8\n    count_8 = s.count(8)\n    \n    # Determine the number of digits to delete\n    if count_8 > 0:\n        delete_count = min(count_8, n // 2)\n    else:\n        delete_count = 0\n    \n    # Remove the specified number of non-8 and 8 digits\n    s = ''.join(s[i] for i in range(n) if i % 2 == delete_count % 2)\n    \n    # Check if the resulting string is a telephone number\n    if s[0] != '8':\n        print('NO')\n    else:\n        print('YES')\n\n# Call the solve function\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    # Count occurrences of '8' and other digits\n    count_8 = s.count('8')\n    count_other = len(s) - count_8\n    \n    # Calculate the number of digits to remove\n    num_digits_to_remove = min(count_8, count_other // 2)\n    \n    # Remove the specified number of digits\n    s = s[:num_digits_to_remove] + s[num_digits_to_remove:]\n    \n    # Check if the resulting string is a telephone number\n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n# Call the solve function\nsolve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = input().split()\n    n = int(data[0])\n    s = data[1]\n    \n    # Count the number of 8's in the string\n    count_8 = s.count('8')\n    \n    # Calculate the minimum number of digits to delete\n    min_deletions = (n - 11) // 2\n    \n    # Check if the number of 8's is less than the minimum deletions\n    if count_8 <= min_deletions:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    n = int(input())\n    s = input()\n    \n    count_8 = sum(1 for char in s if char == '8')\n    count_non_8 = len(s) - count_8\n    \n    if count_8 > 0:\n        s = s[count_8:]\n    if count_non_8 > 0:\n        s = s[:count_non_8]\n    \n    if s[0] == '8':\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()",
    "def solve():\n    import sys\n    input = sys.stdin.read\n    data = list(map(int, input().split()))\n    n = data[0]\n    s = data[1]\n    \n    def count_digits(digit):\n        return sum(1 for c in s if c == str(digit))\n    \n    vasya_moves = min(count_digits(8), (n - 11) // 2)\n    petya_moves = min(count_digits(8), (n - 11) // 2)\n    \n    if s[0] != '8':\n        vasya_moves += 1\n    \n    if vasya_moves > petya_moves:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nsolve()"
  ],
  "rewards": [
    0.35,
    0.55,
    0.525,
    0.7,
    0.375,
    0.675,
    0.0,
    0.325,
    0.375,
    0.7,
    0.1,
    0.6,
    0.675,
    0.425,
    0.675,
    0.625,
    0.375,
    0.725,
    0.625,
    0.45,
    0.675,
    0.625,
    0.675,
    0.775,
    0.625,
    0.575,
    0.625,
    0.075,
    0.0,
    0.625,
    0.0,
    0.0,
    0.6,
    0.425,
    0.7,
    0.375,
    0.675,
    0.65,
    0.675,
    0.35,
    0.425,
    0.725,
    0.7,
    0.7,
    0.675,
    0.0,
    0.7,
    0.35,
    0.6,
    0.0
  ],
  "train rewards": [
    0.375,
    0.625,
    0.525,
    0.75,
    0.425,
    0.525,
    0.0,
    0.475,
    0.425,
    0.625,
    0.05,
    0.625,
    0.525,
    0.45,
    0.525,
    0.7,
    0.425,
    0.675,
    0.575,
    0.425,
    0.525,
    0.575,
    0.525,
    0.725,
    0.575,
    0.675,
    0.7,
    0.0,
    0.0,
    0.575,
    0.0,
    0.0,
    0.35,
    0.5,
    0.75,
    0.4,
    0.525,
    0.625,
    0.525,
    0.375,
    0.375,
    0.775,
    0.5,
    0.75,
    0.525,
    0.0,
    0.75,
    0.375,
    0.4,
    0.0
  ],
  "time": 221.361563205719,
  "sample times": 50
}